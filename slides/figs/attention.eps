%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 112.000000 250.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.6 (Build 19G73) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 112 250
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 112 250
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AvenirNext-Regular
%!FontType1-1.0: AvenirNext-Regular 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /AvenirNext-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /Q put
dup 34 /D put
dup 35 /i put
dup 36 /m put
dup 37 /e put
dup 38 /n put
dup 39 /s put
dup 40 /o put
dup 41 /a put
dup 42 /t put
dup 43 /M put
dup 44 /aacute put
dup 45 /c put
dup 46 /r put
dup 47 /parenleft put
dup 48 /p put
dup 49 /l put
dup 50 /parenright put
dup 51 /u put
dup 52 /ccedilla put
dup 53 /atilde put
dup 54 /space put
dup 55 /d put
dup 56 /z put
dup 57 /K put
dup 58 /V put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -394 1 index div -411 2 index div 1309 3 index div 1192 5 -1 roll div]cvx def
/sfnts [<

2A65737D40417C73652A2128606A72000002005E000002BD02C4000C001900ABB8001A2FB800132FB8001A10B80000D0B800002F410500DA001300EA001300025D411B0009001300190013002900130039001300490013005900130069001300790013008900130099001300A9001300B9001300C90013000D5DB8001310B900060004F4B8000010B900190004F4B8000610B8001BDC00B800004558B800002F1BB90000000B3E59B800004558B8000B2F1BB9000B00053E59B9000D0002F4B8000010B900180002F430311333321E0215140E022B013733323E0235342E022B015EEB42856B42426B8542EB488F50774E27274E77508F02C42C5985585984592C40325168373768513200000001005E0000027302C4000C006DBB00090004000A00042BB8000910B80000D000B800004558B800022F1BB90002000B3E59B800004558B8000B2F1BB9000B000B3E59B800004558B800052F1BB9000500053E59B800004558B800092F1BB9000900053E59BA000100050002111239BA000800050002111239303113330133090123012311231133A601015167FE9B01796AFE9E0148480186013EFEBFFE7D0179FE8702C40000000001005E0000031802C4000F00C4B800102FB800052FB8001010B8000DD0B8000D2FB8000510B900040004F4BA0001000D0004111239B8000510B80007D0B800072FB8000D10B9000C0004F4B8000AD0B8000A2FB8000410B80011DC00B800004558B800022F1BB90002000B3E59B800004558B8000E2F1BB9000E000B3E59B800004558B800042F1BB9000400053E59B800004558B800082F1BB9000800053E59B800004558B8000C2F1BB9000C00053E59BA000100040002111239BA000700040002111239BA000B0004000211123930312533133311231123012301231123113301BC01ED6E4802FF0026FF0002486E7A024AFD3C0267FD990267FD9902C4000200380000033302D600130029018BB8002A2FB8000A2FB8002A10B8001AD0B8001A2FB900000004F4411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025D410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5DB8000A10B900240004F4BA0028001A0024111239B8002BDC00B800004558B8001F2F1BB9001F000B3E59B800004558B800142F1BB9001400053E59B900050002F4411B0007000500170005002700050037000500470005005700050067000500770005008700050097000500A7000500B7000500C70005000D5D410500D6000500E6000500025DB8001F10B9000F0002F4410500D900








00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/D 4 def
/K 5 def
/M 6 def
/Q 7 def
/V 8 def
/a 9 def
/c 10 def
/d 11 def
/e 12 def
/i 13 def
/l 14 def
/m 15 def
/n 16 def
/o 17 def
/p 18 def
/r 19 def
/s 20 def
/t 21 def
/u 22 def
/z 23 def
/aacute 24 def
/atilde 25 def
/ccedilla 26 def
/u0459 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-394 -411 1309 1192} readonly def
/UniqueID 4446589 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281EA889C2D878C3AD50E8F3FE62C0EE5F6306EABD6A13240585D916A5260F6343B9299FAA59FA3F9C364C488CDAFB8F5761BE37590038E1B4FB537DDDC9D18E832953E3A2ED51D74FEFAF5F76B677BEB4A0CCAEAC16EC18FAC406A7238BEB42594037D2D9F83E0DD2A6B444ECAB74E8197274E5EEB29C124A9543EF8DCE4357EBBE7FB9A0523526697221B962FBE4D53120BEDD9A20B0A465820D931B5DAE43A00D969D22F67E0C5EFD4F875F0394047C861C743FC6F3AE742AF6FF87F970755FBF778A8789F455B5BA98BD4FBB5BAF34D59DC05DB9993DC8F04EB490F440081F8FD0A253083C9B6637D21BC64C76026882B429B1A935E6C44F7E5760B08A82C84F5E719241CCD12B5F32A7AAC1F9B41A60F07E613B98185D0E1C01E42237617A3587A170E4DF7C71A449483C8A6D319E3AD6158CB2ECE2146109E8B39B0FC8F69AF20D3AEA2248AC410D21B921C99D78D593124896AAD4CA947E9D2812D2A3A0CF0F26F311AFB3DBEB398EF018E4F04FBA178E467549581EC403D51E41043EED0C08893E2FAE54D6DA31C9DC2B8D16E0FFC2E16A71BF9A959B82CC52B3D8BA02815F02C347A143A801D2A9D64B56302EF9639DFA08C68436815F19CEC9E2D4808031F1C58F02B9A64D9DE31F8754059D9641D1029C9731838F351A191DC2A24F27A84D07C4A973C3FDE3FFEE30189D735C8981C894FE4312ACCE67966E58977ADCACBE420FCD6B22E13491AA041E21050333D19406FFDE5FC5881AB69B150A2281A666A

B250638B275679604DC9A18210F923D6E37093F035F9B62C9E78D4BB81BFA0164DBB369222A42710809EB4D6D618572FACB58434FB7657B5EE1FCB32112D4AE53CBCABA3B30AA18A5783BE1A21F469B5057DF9DBC38620C28D1E1799E46C39545A472B0F0CBB7C3CB8A7CBAB1AE29F5B1FC5C4ABBDD7B2AB994F282558D4A68C45C0BCEB74DA6CF02B48F483D2793BF0BFA5E621BE76DC7B0EAC0111B6649D0FB85FEB0A6399842672AED72AE9659D27B1F89F0E4753194F75C11F62068C18102AEBA0A252A573707D421B609A8299CF79823DC6DC33531E371B625F78AE063332B8839F7998FD102C3BBF9D1472E06B8757B1C25C5D72AD2AB8CE91CF64B3E790F4EBD7A623C372070CB5F601AA9FB1464982CA26F69608C88B1B30D0388D205DEE474C035D1B75406F66A4FBF259C57033ECB798ECEE4BC5D12BC153999D066C5935390E23884491664ADB4099981123EB00685DE2A80188CCE45AD03EEC13043FA1ED17E00E8859AE577CAEA9C7D34503B6085993DAC72A5C009A383C2231FF141DF4EED173600B57D8737C429ECD86C29EA6A788C7090BE598757D1DA7FE662E7B1E12EFEAC3F550E0B5094F412FD5E1FF9A32BEEAA86255FF7E258106BBCC56351DE3E5BC2E7DA51D8F048C1A23AF94A3BBE64C459C33F65D381EA4FA5D51670BE31EA1D76A737EE1213980886BC4CA8F8EA312FD309E858DB4BF7E4446B4CD2E67B4085DBC6F169AB85C0B744E9AB25FBD84BCC069619752434A83EBF238B451FB85C1CD64AFE31B9405E566E371DED7555A38F2682CEAB7B35374166E70FD71329CE423DFC7DB1DEB0F9A84BF534FC3E4D79681FBED3D8B505EADE25FBFC10E5A9C7A30DED1CCD976B8AA133E28D96D5E4BB68395AFD4AA5E17A50D969E793B4F39D67A64275BA42883890C9DA48D7E25203D6F142E4FD6592DD0040A73A01D9277AEE2BABF76A05826F16AEA4D5E5795CBDC41B8490A848BD8CAAAD034BAEDFFD9CB3264FE85E16F4E5991D58A85153B6E901CCE7948D4595EFC5B36C06A4CC194A033D8F314B6BCA0F2184FD423AB6DE6B7972F97ADCFE3EA0E02420DDE1544208ECE824430337E36E0BDEBBAC9E3D19ADD76D2A0510D378F6559EA79D79CDA2152FBF0F333A16EBB4DF48D29DE8E22C169183DF0C80F0E5A79CB684533359E949FB5601C1C2A6D9EDA3F7C6F66B675E1DD9883B45728AA7FA8BD473D57CD82D06B1F7722E44F3E570E2145DE35CF2BF6323C06B6753B8A5F29CEAC46B9BC98DD3DCC1DD7A8B0DBF20ED1A9D629130C3E658A5103EFAC02DA2F2DD3FC0D96C5578D72DDC8E55C346AD0BCDDAE140932DA18EB85BE768390BB82E2D1C57135809351693F94692509CACB97A31280B27E0A29F72AF16922081DE84F3EDD17C385CD16B494EB7A703ECFA4EE517EDC27F38E5814FE02C213F20F5486DF
E55EA52046701BB9B7BD132AA3AD7A1AFC0850E4ED9E185D05912C19910ADFD0AE05AC2F3FB04C7F88B0C23ACF77133EE562CFF0E2F598D3CEFE824001AA8559F2A591C59728F561B89E7866A746A85D52017EE2A4FC992F8E1D53618A1820219D2B52914A9A3B48BDE66424058A82FA7782C7BB1AA4F0736DD76505FFF8D9701FEC3150B25610B7286EF28906747700CADB8EDE52D9A70E5E454BF5D48D045DA5B660D7F3A9BDB26FE50E38992B090DA343D0ABF760DE9924259FE0261AD1323A1FA81294BF515FC24A7B751791A21765ADE655EC182D5D179F31EAF0EB8A57B0916A4F22270748D542B734CAD12EB8980FC7EF53AB3F2D500F0CCD30AC03B004764E7BC6F7BD2FD534CCC22004618EDE68C0352AC7386C14C59647C1FBB3CFC150150870BAD3265007941E0E5EEA1DBEDAEDEF9A6E4C64B5FB503B23BE5B6542118720DD1BD58FDBD3595920A9465AEE196411B2EE8486E44BE1AAE61E52D185DB04C027E7E312D3300B9FCC50573F7FA28B75FDF292A5528B7687FD93FF7923A1327BDBAEAE60C61D216B18CE35E4FB4DE7AFB0ED1A90CCA0FE945B8E55C0FB3A3B2F7D97E78F5BD6BE474AEC7E23C3F9D3520FBD377DCFB9D6F938444D621C4A562468BA29717D91AA94CA871B466A1D171CCEFE658E1421685B57C0593889F1F21435E354FC4957AE59AE64A738D663CE0947E13B380A72E11923AF3755D49984AD3CD543D05FE0865160F4A9941EF73C80201C5520F4A87424AA8B4B17BC24C7E197068B7BB60E77CCCEF61AA1922390B3195145AB60D080BEA1FCED507075CDE33FE7D9B63F4EB07ED53D16812C6F7ED1C36F4A8DF24BFE51D60741FD7FCBACCF67D3E05C8750334BF9D5DE709D26007CE8CB42E89B375AC8B5B76D8A5CA6F09F2C2C7C00F1919384C657FEC6B23EA0745F4E89131ABEFD8AA45D3088FFC5B4E416AE58A94B3747915A762401F0BF3144FEF3BB13F1ACC9DF3E305E7A1C19F3B0D02BE9675922D154221388A388260BAC56D0B8C6B0C73B7CD4644A30D704383D9BF232050B0A8A9A8D4EC25E2B1AC3903AE824384BFE17A869FFD5D042D6B8F6027F1F50A8D408197485973CD3EA1094EABF1443472F87A64A93548CD846758320CDFC0B85BED7AA499396AE301C414A67A8571D45666A4A96B277C298F72154E66675DE48FE1790C14BE3BA4952986CD79C17FF2D28C567E637B4B210AC40C342E10A93BF0077A8A3C428165192A92FFACE68E54F10F6071AA86A4EA55F072A4ED5536E3DECF8869596D7C0991FDC754AB876D5C6EE175802DE68E83D88614025986B2486540368CC53DE98133BF845F38FD49BB74E847EFADB162AE1CACA51CEE4232D3C7C80010C844A36120487C30CC67E36032D34D8FBB455BF4ED34676CAAA8FDEF123C936D276F5726E5538C0BD5FC904E960889E69D240EC
21DDC2512DF1A8036DF176B1A79ED9A76F449B5036B6D92E415A31D65D1780C5999186F71EC24745CBAEA965C5C3220BFF6A81D4816217EF380DA00559BC88285F95DAB974BF80CFBF5304994A3EA441DF15DFF19E1A10D00BB10ED35FDC2981E51708395521DB0A6941F78FB0730FE44F5C9810D95B49DEB937B910B49E147369A22C0496F67BABCAB3E0ACFD047310E9CF44D1BEDB0ABEDEA09CB0AC7398E5D81013D4D9FDFF5483FCE653BDBE55055D15B9862DEA793D6BDD03ADFF90F9CFEF0EA7CE5826720C7E5794851830952EC7BED86D144F881153616C114C97215899CD9ED7B9959B192ABD4925AA992C61F93D211A03A40B2A4162274788CB738CF9652E087AEFD4B607BDAD8FE61FE492B9D489E137CE57980E6403CA47DBAB324219252EF913B07621864F1FDE01F4AC5FD40934BBED6B614A4EE507A7601EC7193C289A3ED61D50EB95E8863F69BEEA66B79C632C8A5E2BC5A07D2BC5EF9432EB0DED606F694B01D35CAD83AFD4AC61B73851A339CF66A363C7F9EF056F34BB1D28436018C7FBEA45492A68153594E862B3C146498AD3160A18B91E034762650FB4E25C5A4257150D467D7939E7AA33567E36C1B63532EF0849A15ADCA7A2B34AF910E277489C6DA7D72654008F39474D62E2DC4910FF2C7D9DD465A80884AD063374C530FB51A625F5AE0F2004841E4394F8583C6558423A5083D3D728535254FCE7DB1414DF48DD3A00C6E766FAF218EB968C477456C303CFFDA9CF8DDF46FC95296D18C2B5EB4AF9C25142598C76DFCD37CD258F83A41AFB698291863613510271EEC2AF3D2438651A1CBCEB4188BEAD1BD2F80BE57672B9DA68BC9C175BBAB6D13D69586393CE1ACAFB5A89EFB715437E6D15C029536488839456BE73EF23A577F7E43FA7810E5EA4864E025921AFC9F99FC8569BDD901D235306EBCD3C5BA426C5CF961A5D2C4A8A23CF3228E89CDBD179320CC82784B1360652C78121582CF0C3E14C6314D1C69F2C0070DEC2F1F410BB59FA7B736A3DF1A3C1F3673746F0DE241E82750309593A01E77E43C35F9D14B1FE52EDB7EC113B81169AAE5EDD17F4DC9FB1C0E30FB14C80394DE93DB82101D41E7C79E9D475C41937FC59F811CF2FC3E8D957D27E8C7E33EBCFD9F268DA82EBAFADEEDF9D8709207C05BA5147BD14B5B74442FDCA548AFCE73BB2469442D96C430F221F09B4D170006978B73486C8C52EFE943B48FA11E74F8D1A4EE5F1E7A75A0CFA5DC36C14B4FAEC221F05BB530B1C0AD12E29DA4DE2C6B89180B995087F3FC9A7F50CA2A0066B7188668D05B020ECF22AD0005524C677D904E7D832F753E212836933317E19B25AB212B8C9EF46C6BDBF6B2BA530AF1A821BD91FE9B0CBB78D49220D6749895DF1E3C9BEA787F93EC9E163B581A28F48BFE9E6877E46E796C50C21575024FFF09148DF
A3068CD186C0EB04CAB3A8AA286459F8F6C8FCED0A6F333CAE845AA804BC9E3CD83D0008E6767E5883690138375267434EF4C771456C3518539967B2216AD2296ADDEABBCDA7E65048B7E8EF150B1765B627D8E2ADE062578CC50D80B2755948CBEE7F24157F5E136190C70B74AD0CF119E9B8D928B932DA439DD1B46BD8A4F972F97B387860B19E924A0759CE79026CED0F9B316E2DB23F9B6DF3EE3BED67566C9CD77B4EFD55236B30E736052C3E83A2A20AF914FFB2928018CED77524B02FF3527926B364D36F5843256704DB79A53F76B468F45AA59A9B7A174AD5E10F807D66BEFE81424E5391CBDD045AA4B315BB3F12BA5C9ACCC426E3C91F2A52AE31A8FEA46F18CC20FA789F35FCAE20B0C6D82E373046AEE2E183BE73809F39178EEC8EF3C1400C47C695D4D6C30BBA0D46570A8096E364023367958A4FF367FC6A92EEB0FE70D09605CF3F8F71455B7BDA95DDC2F8D188839C37E45DF086FB59A038CC6B07948E67BBC3D717561EEA100308710365D5C912D447373947924E5179C1C3FD71B16553914CD20F608C6F0A9470DEDA93C8D9088464CE9EF6A7F700B3EF92990D8A32DECB1E36EA6478620479EB42D0B5D7CE0E6997A3AFB4B70B80A90C6B4D9991B04EF35F4832FE8F23C912C57F136CB6D4652C29AE7FA4B5C72299137A776B09D7C2178E6CF2360171DA2853FE9A8663B7193C590DB758DBA88DE241E4FF4DA5253F57F133A531398972C08B25D50A91904EF9F7ECDC5A4F4AB71ACD461E9BAE6AC69ACD8D313C3EAE864BF7060A90C8C0B67602E7738F285E2FDF72AA4BE24CD62252D40B9877A29F7DC1B5FAD0D024328390FF46D81CB1C0CCCBC39CF427B46750C60AD2D04090A558911067CFF49490025A7CC02C5C2688404833D3639286080FE0F7E6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AvenirNext-Regular cguidfix
/F1.1/AvenirNext-Regular renmfont
%RBIBeginFontSubset: AvenirNext-Italic
%!FontType1-1.0: AvenirNext-Italic 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /AvenirNext-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /o put
dup 35 /f put
dup 36 /t put
dup 37 /m put
dup 38 /a put
dup 39 /x put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -381 1 index div -409 2 index div 1365 3 index div 1194 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/S 1 def
/a 2 def
/f 3 def
/m 4 def
/o 5 def
/t 6 def
/x 7 def
/u0459 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-381 -409 1365 1194} readonly def
/UniqueID 4505616 def
currentdict end
currentfile eexec

A465780E5053C7FD73DC3C7C9F3CA4475A8EC66E6FD1482C759E3FBDF40AD816EA804BEA128D5D405C2E1E18F7E542C50AD3ED2E1D570C913FDAB5BA5217D27BB4DC1FBFEAFBFFFFF278E8FFD50CC9721285CE23627D9B195F23652539F188EF8FE689BE8B2E632194C421F8D6EA7CC03B3DA7F8DF8BEAF8F63E82A791B3BF8B962D4927FD26231CF816B3BF63CE9AD9714A82E6A4ACF881DA5D4352F4C42C307621379A0B3DB71D64907645D552611B62F2962E7C70753DB39EA2E7680D2B45E09AA457170F606AFAAB73A3EFFDF2AF1794B1E70F16A94545D5CEF47B2992B94353BFD6BCE9FB282A26BD8618A52E748E2DBCE366440EAE23DE23875EEC546D9491EEA44587DEFFA96512A1D2ED1DB55C534098C5AD6B5AB8584E685E4978FC390E17A1640CE70D0646B2FCF2CF80C5D695753BD942CA901BE415B01226DC9DDAC2B54B17B3D089B6E83F1D75FCB325B520FFAC43F2B082396A7FC2EC427A1A7EF7FDEB7C8FE43C039417F5DA007763C64DD5C2168D9BAF4232225A6C4AE880894C0EB2CD7B3F8EE1852D3518DD8611DDEB1C4943F5EA9C10A3D93BA7F16ABB439424680A88A501E4B1797E8845A639FA15E8D8048F9E8BE84089D0D8082E703CA9DEB3CAA313EED307FC68954A54B0C4A7EBA95060B44EAB69D9DF8831362442B376C4CAEDE92F61F98E377B230DAD55237A5818C2FFC031309115EAD71D869CB8DC753BC4DD655D956872939F006A2CABD074866D5BBF5D9ECB2FE112BCE9AE4BBECCD28E88AE4688BC0256EBC84829B3D42D1649A0DAA96728403D65CB994F484028AD85DC8F6A071A0BBB9496529BEF0596E36769502C4E9F1259A8E9EA88E5A81115B0B76EE92F0F8D791F4FA038390ADEDEE8DB7E406365FB117C1B3C348904D603FCA01B797A86177B1307CA5E5C98960CA14F44377EFD50AD4AEFF07320529438A5A73890D5504D2C0E8FADF05D40B6A527584303E4B4B4E567AC3F6596DE2A17D230F5B874BBF7FE5EF8E76799A54498C899A2835ED4F53B8C9D10966E81F72D0421471047A0699FD3DA0452E1CACF4C3F9CDAE43A1F0823A9AD734DDA1D40A93AD5F004291B5457F6F9CBA8E2910FE930425C8E1FA72AA1455C04F56E2D5B5781B88D529BD354ABE90409766313850B95FE385EB36C412DBF0502C12F74216F026E79A51B1A6027D02B876BD0BA8B4A8DE50C7CB607CDBC20A3FE7F6E5E4371AB74DC1E41D1D47B1882522FF94089394EC04FB1AD423C7420E0CF076D882568DB541A06066E1DAF6A4A8DA2198AAACF70D3637B74C406CF8045532ED4CA168D32BD68461F01669C77E94A650EDEB49570362A0DDEF01DF5EF498BEE35682AA131DB70008A069F813C5FF62FAD8533BB989E49D624609CBF6C14351AC2628A11FCBCC507FFF2D60BC405F7288B18517C9ED484957402E6F0FE863B
A4E61E9CC60C7D1D214CA93A00E38416CA9759C9090D28AA64BE1ABB24DD9CDD00A18AC36702430BA1C8FB1CA1D31311237C20B48A229FA50E68F39403F35177BC93CDF88E2435FB37FFF25E77D6A167685BF24926F47FFEC7CFC526D4997F68F1819F0030F5A2A3164B7EE9246B917C8D2EE47E71E87EEBE0F0E7375E954EE11E340B20CE96786CAAD2329D0A215BFE27190A68260C2D74954F33C02064BC3EC306CCB1DE2371F4489790D5B38895A04426FD6217D0C14AFB8037A0DA680528DEEE702F6EA25AB7C75E08BB594BAF7053078086ADC91AB7F61AA41346A322D484D6618460825A78B2D879834C6E65F4969E088BC43FE5DDAB37A3F35FA9B34018263DA2C525FC0BBF0888DAC8837A6DF2BC5F971F716FE46426152E87D4F13E3BD0B3C4E1861FF1789B68C6A4C52CD37F621583300C4AA912E31C9730796E5845F7C6A2B66927E5ECEF45E535C6F1F87BEAF65C26943F2D9D4F7BB0EB434059B6428497A4B55EE98C6F08D54B5336D55EA73086469EA68CE03885554B99A7A7A854947F5D8693725624F0C1A05039751C71CB21DF6150802E9E62CF9668C7AE0D78ACBB54392DD87DD4940BFCD2DF5044DA6DA741F4C0F1AE90F06651BC1198FD2D68A199C30617E7C0357F7D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AvenirNext-Italic cguidfix
/F2.1/AvenirNext-Italic renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 sc
q
0 0 112 250 rc
1 0 0 -1 -118 342 cm
/F1.1[ 14 0 0 -14 0 0]sf
130.2 331.10001 m
(!)s
/Cs2 SC
0.98475462 0.961429 0.48286048 sc
CM
0.5 114.47725 m
75 114.47725 l
75 90.477249 l
0.5 90.477249 l
h
0.5 114.47725 m
f
1 J
1 j
0.60000002 i
/Cs3 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -118 342 cm
118.5 227.52275 m
193 227.52275 l
193 251.52275 l
118.5 251.52275 l
h
118.5 227.52275 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 8 0 0 -8 0 0]sf
122.042 242.02275 m
("#$%&'#\(&\)$%&*\()[ 6.056000 2.000000 7.064000 4.576000 4.648000 3.552000 2.000000 4.888000 4.648000 4.272000 7.064000 4.576000 4.648000 2.536000 0.000000 ] xS
/Cs3 SC
1 0.75 1 sc
CM
0.5 159.15451 m
75 159.15451 l
75 135.15451 l
0.5 135.15451 l
h
0.5 159.15451 m
f
0.60000002 i
0.192157 0 0.40392199 sc
1 0 0 -1 -118 342 cm
118.5 182.84549 m
193 182.84549 l
193 206.84549 l
118.5 206.84549 l
h
118.5 182.84549 m
S
/Cs1 SC
0 sc
0 i
140.63 191.84549 m
(+,'-\).\))[ 7.088000 4.272000 3.552000 4.000000 4.272000 2.784000 0.000000 ] xS
137.45399 202.84549 m
(/\(0-#\(&\)12)[ 2.400000 4.888000 5.080000 4.000000 2.000000 4.888000 4.648000 4.272000 2.016000 0.000000 ] xS
/Cs2 SC
0.98475462 0.80610132 0.63830966 sc
CM
0.5 203.83177 m
75 203.83177 l
75 179.83177 l
0.5 179.83177 l
h
0.5 203.83177 m
f
0.60000002 i
/Cs3 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -118 342 cm
118.5 138.16823 m
193 138.16823 l
193 162.16823 l
118.5 162.16823 l
h
118.5 138.16823 m
S
/Cs1 SC
0 sc
0 i
/F2.1[ 8 0 0 -8 0 0]sf
141.218 152.66823 m
(!"#$%&')[ 4.512000 4.768000 2.264000 2.456000 6.992000 4.272000 0.000000 ] xS
/Cs2 SC
0.75039524 0.75075155 0.98323244 sc
CM
0.5 69.799995 m
75 69.799995 l
75 45.799995 l
0.5 45.799995 l
h
0.5 69.799995 m
f
0.60000002 i
/Cs3 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -118 342 cm
118.5 272.20001 m
193 272.20001 l
193 296.20001 l
118.5 296.20001 l
h
118.5 272.20001 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 8 0 0 -8 0 0]sf
125.506 281.20001 m
(+31*#01#-\)45\(67%)[ 7.088000 4.648000 2.016000 2.536000 2.000000 5.080000 2.016000 2.000000 4.000000 4.272000 4.000000 4.272000 4.888000 2.000000 5.096000 0.000000 ] xS
144.646 292.20001 m
($\)*.#8)[ 7.064000 4.192000 2.536000 2.880000 2.000000 0.000000 ] xS
0.60000002 i
/Cs4 SC
0 0 0 sc
155.75 272.20001 m
155.75 261.42276 l
S
0 i
CM
37.75 88.577255 m
34.75 80.577255 l
40.75 80.577255 l
h
37.75 88.577255 m
f
0 J
0 j
1 0 0 -1 -118 342 cm
155.75 253.42274 m
152.75 261.42276 l
158.75 261.42276 l
h
155.75 253.42274 m
S
1 J
1 j
0.60000002 i
155.75 227.52275 m
155.75 216.74548 l
S
0 i
CM
37.75 133.25452 m
34.75 125.25451 l
40.75 125.25451 l
h
37.75 133.25452 m
f
0 J
0 j
1 0 0 -1 -118 342 cm
155.75 208.74548 m
152.75 216.74548 l
158.75 216.74548 l
h
155.75 208.74548 m
S
1 J
1 j
0.60000002 i
155.75 182.84549 m
155.75 172.06824 l
S
0 i
CM
37.75 177.93176 m
34.75 169.93176 l
40.75 169.93176 l
h
37.75 177.93176 m
f
0 J
0 j
1 0 0 -1 -118 342 cm
155.75 164.06824 m
152.75 172.06824 l
158.75 172.06824 l
h
155.75 164.06824 m
S
/Cs2 SC
0.75039524 0.75075155 0.98323244 sc
CM
36.400002 248.50902 m
110.9 248.50902 l
110.9 224.50902 l
36.400002 224.50902 l
h
36.400002 248.50902 m
f
1 J
1 j
0.60000002 i
/Cs3 SC
0.192157 0 0.40392199 sc
1 0 0 -1 -118 342 cm
154.40001 93.490974 m
228.90001 93.490974 l
228.90001 117.49097 l
154.40001 117.49097 l
h
154.40001 93.490974 m
S
/Cs1 SC
0 sc
0 i
161.40601 102.49097 m
(+31*#01#-\)45\(67%)[ 7.088000 4.648000 2.016000 2.536000 2.000000 5.080000 2.016000 2.000000 4.000000 4.272000 4.000000 4.272000 4.888000 2.000000 5.096000 0.000000 ] xS
180.54601 113.49097 m
($\)*.#8)[ 7.064000 4.192000 2.536000 2.880000 2.000000 0.000000 ] xS
0.60000002 i
/Cs4 SC
0 0 0 sc
174.40001 137.60001 m
174.40001 127.39098 l
S
0 i
CM
56.400002 222.60902 m
53.400002 214.60902 l
59.400002 214.60902 l
h
56.400002 222.60902 m
f
0 J
0 j
1 0 0 -1 -118 342 cm
174.40001 119.39098 m
171.40001 127.39098 l
177.40001 127.39098 l
h
174.40001 119.39098 m
S
/Cs1 SC
0 sc
/F1.1[ 14 0 0 -14 0 0]sf
168.9245 331.10001 m
(9)s
204.63901 331.10001 m
(:)s
1 J
1 j
0.60000002 i
/Cs4 SC
0 0 0 sc
209.2 316.32132 m
209.2 127.39098 l
S
0 i
CM
91.200005 222.60902 m
88.200005 214.60902 l
94.200005 214.60902 l
h
91.200005 222.60902 m
f
0 J
0 j
1 0 0 -1 -118 342 cm
209.2 119.39098 m
206.2 127.39098 l
212.2 127.39098 l
h
209.2 119.39098 m
S
1 J
1 j
0.60000002 i
173.3205 315.70001 m
173.3205 306.10001 l
S
0 i
CM
55.320503 43.899998 m
52.320503 35.899998 l
58.320503 35.899998 l
h
55.320503 43.899998 m
f
0 J
0 j
1 0 0 -1 -118 342 cm
173.3205 298.10001 m
170.3205 306.10001 l
176.3205 306.10001 l
h
173.3205 298.10001 m
S
1 J
1 j
0.60000002 i
135.601 315.70001 m
135.601 306.10001 l
S
0 i
CM
17.601002 43.899998 m
14.601002 35.899998 l
20.601002 35.899998 l
h
17.601002 43.899998 m
f
0 J
0 j
1 0 0 -1 -118 342 cm
135.601 298.10001 m
132.601 306.10001 l
138.601 306.10001 l
h
135.601 298.10001 m
S
ep
end
%%Trailer
%%EOF
