%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 695.000000 271.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.6 (Build 19G73) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 695 271
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 695 271
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AvenirNext-Regular
%!FontType1-1.0: AvenirNext-Regular 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /AvenirNext-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /E put
dup 34 /t put
dup 35 /a put
dup 36 /p put
dup 37 /space put
dup 38 /one put
dup 39 /colon put
dup 40 /u put
dup 41 /e put
dup 42 /n put
dup 43 /h put
dup 44 /o put
dup 45 /m put
dup 46 /g put
dup 47 /two put
dup 48 /three put
dup 49 /four put
dup 50 /c put
dup 51 /atilde put
dup 52 /J put
dup 53 /l put
dup 54 /d put
dup 55 /s put
dup 56 /q put
dup 57 /ecircumflex put
dup 58 /i put
dup 59 /P put
dup 60 /r put
dup 61 /ccedilla put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -394 1 index div -411 2 index div 1309 3 index div 1192 5 -1 roll div]cvx def
/sfnts [<



0007003000170030002700300037003000470030005700300067003000770030008700300097003000A7003000B7003000C70030000D5D410500D6003000E6003000025D303101342623220607273E0133321E021D01141617232E0135230E0123222E0235343E023307220E0215141E0233323E023D010181403D2A4819261D5F3C2642321C04043D0304022051391B392F1F375C7740142A55452C1320271424382614012E3D3C1E192D1D26152A402BCD1B3A141128132F290F223627363F1F09350715282119221509192B381F2300010038FFF401E401E000210115BB00080004001900042B411B0006000800160008002600080036000800460008005600080066000800760008008600080096000800A6000800B6000800C60008000D5D410500D5000800E5000800025D00B800004558B8001E2F1BB9001E00093E59B800004558B800142F1BB9001400053E59B8001E10B900030001F4410500D9000300E9000300025D411B0008000300180003002800030038000300480003005800030068000300780003008800030098000300A8000300B8000300C80003000D5DB8001410B9000D0001F4411B0007000D0017000D0027000D0037000D0047000D0057000D0067000D0077000D0087000D0097000D00A7000D00B7000D00C7000D000D5D410500D6000D00E6000D00025D3031012E0123220E0215141E0233323637170E0123222E0235343E023332161701AB11412629422F19192E42292D3E14331E573D395C412424415C392F611E01691B231D3345282844331D221B26252C25425A35355A422529280000020038FFF4022102F40016002A016EB8002B2FB800122FB80000D0B800002FB8002B10B80008D0B800082FB8001210B80010D0B800102FB8001210B900130004F4B8001210B80015D0B8000810B900170004F4411B0006001700160017002600170036001700460017005600170066001700760017008600170096001700A6001700B6001700C60017000D5D410500D5001700E5001700025DB8001310B8002CDC00B800004558B8000D2F1BB9000D00093E59B800004558B800142F1BB9001400053E59B800004558B800032F1BB9000300053E59BA00110003000D111239B9001C0001F4411B0007001C0017001C0027001C0037001C0047001C0057001C0067001C0077001C0087001C0097001C00A7001C00B7001C00C7001C000D5D410500D6001C00E6001C00025DB8000D10B900260001F4410500D9002600E9002600025D411B0008002600180026002800260038002600480026005800260068002600780026008800260098002600A8002600B8002600C80026000D5D3031250E0123222E0235343E023332161733113311233525141E0233323E0235342E0223220E0201DB1E603337593F23233F593733601E02
4444FEA3182D422A2742301B1B3042272A422D184F2D2E26425A34345A42262F2E0171FD0C4F9B2745331D1D3245282845331D1E3345000000020038FFF4020401E000080027011BB800282FB800002FB8002810B8001ED0B8001E2FB900080004F4B8000010B900090004F4B8000CD0B8000C2FB8000810B8000DD0B8000D2FB8000010B80015D0B800152FB8000910B80029DC00B800004558B800232F1BB9002300093E59B800004558B800192F1BB9001900053E59BB00000001000C00042BB8002310B900030001F4410500D9000300E9000300025D411B0008000300180003002800030038000300480003005800030068000300780003008800030098000300A8000300B8000300C80003000D5DB8001910B900120001F4411B0007001200170012002700120037001200470012005700120067001200770012008700120097001200A7001200B7001200C70012000D5D410500D6001200E6001200025D3031012E0123220E0207051C0107211E0333323637170E0123222E0235343E0233321E0201BF034F49223A2C1A02018401FE7C011A2E3E24354D14332A653A34594025244056323754381D010E4257192B371E16071009233E2E1B312028352E25425A35355A4225253F5400020038FF10022101E00026003A01F8B8003B2FB800082FB8000AD0B8000A2FB8003B10B80012D0B800122FB8000810B8001AD0B8001A2FB8000810B9001E0004F4BA001B0012001E111239B8000810B8001CD0B8001210B900270004F4411B0006002700160027002600270036002700460027005600270066002700760027008600270096002700A6002700B6002700C60027000D5D410500D5002700E5002700025DB8001E10B8003CDC00B800004558B800172F1BB9001700093E59B800004558B800232F1BB9002300073E59B800004558B800082F1BB9000800053E59B800004558B8000D2F1BB9000D00053E59B800004558B8001E2F1BB9001E00053E59B8002310B900030002F4411B0007000300170003002700030037000300470003005700030067000300770003008700030097000300A7000300B7000300C70003000D5D410500D6000300E6000300025DBA000A00230017111239BA001B00230017111239B8000D10B9002C0001F4411B0007002C0017002C0027002C0037002C0047002C0057002C0067002C0077002C0087002C0097002C00A7002C00B7002C00C7002C000D5D410500D6002C00E6002C00025DB8001710B900360001F4410500D9003600E9003600025D411B0008003600180036002800360038003600480036005800360068003600780036008800360098003600A8003600B8003600C80036000D5D3031171E0133323E023D01230E0123222E0235343E023332161733353311140E022322262713141E0233323E0235







00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/colon 6 def
/E 7 def
/J 8 def
/P 9 def
/a 10 def
/c 11 def
/d 12 def
/e 13 def
/g 14 def
/h 15 def
/i 16 def
/l 17 def
/m 18 def
/n 19 def
/o 20 def
/p 21 def
/q 22 def
/r 23 def
/s 24 def
/t 25 def
/u 26 def
/atilde 27 def
/ccedilla 28 def
/ecircumflex 29 def
/u0459 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-394 -411 1309 1192} readonly def
/UniqueID 4446589 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB280353B1C5819C3A497CCA8A8D3CF7A0276FF808C0FA4CE75E005BD817095BC020FC063EBFDF0DA2123561BE631963365C33460DDE961A8153C0B18F1D7F5DE0D48E19F31DA99902B9E3CCDE08B1BF0EC7F96AD4E70B9C23CF9613665A11680923CBB4AC919F8E09D1295D03ABD74EBDE8CDF8A9D7D7E96307EDD9305584672D2E5A3EBE7B4262A46DA0C9DC2826F09286154BDC5349F3089919D1F975D4D0B118572D6B478C9D45C55EDFC50DCE03926A1B12A150E292EF283B48AC589C9AB57502E0D9BCD0C6641A44DC6F2A321327698C6D789DD97E055D22FAB5ABCB8BE7BBA682E1792DE6EF3CE8B4BBAA711145DD8F22E8B3A36942B15A37E541494FC00C580BA9DF3D863562AA005231D6B098086B3984C3A6507D5222316D8ACF08EA24CCAB79D14F07E8D439399BE0249924E286B653D7F6DB48978574854CEAC7674DC919E45D6F693BA79370C52FCBFF0DBACDBB0F932F7CB27FE2ECD0CDF96611410EE341514F5FFF6B53B3728835355FA1BE8D1F8529EBD778280576A283536F1A54BB006966A545EBBFEA3C97162E7E6087EBD4F2E3DC6AA9C3A62A4216E011429026B6DDFA2CF3BAD8F36F519F1EB25D3937635EE868126E0FA0C480A93DE09C57627FEBA6A44FDF27A30D418D5DA12DCB0344D6A338EE1A9C9DCF2401281464FE8A0A294C9F7A7567E09A622619B2CABD1832AA9FEA7BEB5A7200F93B825B5505A4358684305C67E259A513946BCC02CFB40213B3BB371816395E64D467F2C67E1C331
0F677185EB61FE7543943CA78A9A15EC72A276E90EE6030CC4ED0E99F716E8DC5B4C92B13564F7FA9C31B7E483D5529748049A8B928BF858B8EDCCCD4B3DB9A051E3A1EB2121FB244F0498871A1F3CDD3439D6986198DAC49DDE58FEEFFD4E6F7450872C0324AC360C669953CCF13C03B72035D673AB9267E22C9CED4DAC97721704DA322049F68B92FC074717DAC061F19937B6FC17C6BBC70D7EE6C522A040D99CD22622B6C0019ADC5117FDC64BEF47ED0CD79206F854F539B6E3ABF0DEF37511C25C38E3DA6003918708F554C41DC2B21C7111990BAE312F1C8BE5665B25172FF5E0E57C2B5241E3E9E4EC813D6588C1F6DBE5D16FA88801AD73CF73E48E099D899DDBDA65BB0B01323DED111F8228092661DD858181F879794486273C16835D01EA2F2DF17741EEB1EA7E7649E3B8B86A442FCA79C187B2B7A341CAD93EB8E624FEC47B3FCF8E9713C9FEEE9A92A76B9209A8FD8770E19448F37B912FDC64CBA19248A32EFF1425DE181A19AC681FCE510504DC81E01E26E7F344EF0F55B7E74F6B0D02E6A7B6BB9DB4CD49C5A5B7C77E468AE17BFEB3C39CC2B03EC59DC5E381B9EDD8DAA729C1640C727FDB79E5BB5990FBFAC122B78FC5C1FC8DE7AA07190EF7293E59D086EC7513E5566F0A4BDA72F544DA455C33379DDAB36D145C1FC79D9ECCD83C1A941B83957B87B6A60357CA38E9CB203F76CD03CCE12D426708B546673777272B36A53A3E4E18FD84D2119B7FAE0F035CF3AB1ABCB99AC8ADBDCCE26043F503601EBBDBA76D04BDF62371FE8407510EBDC23D1AFA3A6590428045255FD0B4468D02DBE5069E348FBBC1E0D9D7F8400E252DE31040FEB5620C8BACB9A531617866140916C40D60738788AF59E854A583CB1C3300E0CF52197ED3F11F5ADB7230845CD379D080F930A57CBC351F4D75C2A05B4D008D5F06051ACE31A11AEC8D7FA4D920B91DCEB3DB258031718A38828DB87A292626003C05B86A7F68908DF277FAE509D1DECE9C802458F432329EE499B47B0AA75D847A298340B0CF98FEF7ABCFB459A6CC45C6C5D2DD96B22B735EE555CB9FDD56C92D7E53A6D5134E0D54E9060D8BA113D8F75BCE6F3CA77C8C8DE49D50A092455717A4DAAA2B8220C96E056BD9CB859795BE30ECECB7CA1F1476517DBE4B857DC3963617148879A5F5822F9FFF31BA71A405BFF8E8794F64B4127D8B2184CBF73E4332D298FB4F53802E088F86ED6E7C565334DBE06C4ADA0E339A7EA63B9AD5CBDAABE2C8817314BBA0D72D797151782999D5BC186DE47ABAE5FC50E25D0E48640A706959886F83A79FCA07A769E58A8DA9524AA773375BBD0FFAEF4188EDABC50774A38906C7301F6BCB8266744923B17BE407F14AAD54651FA0B00BB9F0EF0EFBFB4F4E03D00FD67E36E4025212E0B3066BDB50D93FDE8BF94CFD4BB6FE0A2B2A4ECC

6A15B9F6FD9E9779636B59C93289D467BD58EEC0AB5DBA12A8E8421DC8FC2F7E019E8C80470A88652F328E96DC9263F241E4CEC6F66C60E08665308849331BAFD8FD057B185CAA8F75E69DDEEF79911B2B1388DF0BF0899B3E4AB06D5CBEDE57214C228FA4FCDA13D7AEFDA8E5E4F40A3B8DE7185C154061B643FC1849FD3A5AC34EABE2B8FE0DD36C8D2F2D211BD57B1BA494AB4F89B1BF7555C4D8CDF2CFA1AA26FC641DBF780C52CD20AAC255B245C327A8B31D410E6B5D6A05B19CEBF55A7F25DFA5D916E17F319601A2F18C4AD773E2D7777A44A6FB51B9764CA8564226D9ADC2190C887E29C3767B83F5B62D65319E70ED94F217C3085E47542C5D6B0E6DACF4C13D0BC5734124CA59E4DB610644707F2036B06F754A17A1B00F87AD2DC801BEDF359902A29F79945A3692FCD7F1D02275F34B19D0B12BF85E81A862748AE242E12F843F475121AEC99A7F6A687D4C1580A80559BDF426FC113B89872D0CFE764170EF41412FF82327638CE27887E7B8973EFEE884F32B885BEF1FA62101D3DC2CA34DA8EA324CF5F359FDD43985D2C76896144F1F80A323BAFC48142DB62ACDB5A97F8E7D17A78A43F6FE0F2294FF50D7BA4C090A3BD4ED891B6B57B2B164470C32CCB16B7A81D350BBF17976E1028D2474D4EEE673110C3020A80BBC48AB5C9684D494DBA8809D181E4412EF290DA3F6EB75F0030C1FB2DAE87CE9617967296977A4ED32704ED1A07CCDD91012D721EFD0055E1E8DFEA753EF6F460F5AA9718C8AC368C55FB848AE8301B432F255FBDABD97E49222D04D51993A1DE7BEB0045C0A9498BBE3823C481A176723ADF1527AA15CEA94D8DCEFAA2E813CD6294B06D44B3D3EB2D5ABDA189FE5DE55C443E8C77320D483B319846585675F1BB09EC811271895BE3DD84EFCDD0A647893A3CED494C331237E364DFE6FFCC3A1E4A99B8ECFA511F56597154F8E6314F0D5AA2F2F3C83283432578AD766CC0B6E2961792B40AA853EC356B0DB5B902A895BD17097DCFDA15BBBF86AD62355AF1BCDCC10768A2E07E56A9363B47F5A22B25750EC98BBA91316DC3679BDD1F2C37C160C549558E847DAF7657FFA9025B97608AD8FF6F1C0DF7E883B4894287C2B051A6CCD441E3F7C80A1E6B204E4F503DB185350848216F1FDF53C5EE391F086575F5DDB0F7EBAEBEC43E586A2BF2716CFAFB2CE84781E0C7E82133BD8A3C680EF7052C727C2E31F613BAB6FCBBDE10452473CEE1FDD3F1D7010B7D1CC04FC3D4E773C522E13EC02B1277AA13F66D69C1F76C4CD15BDDAE676D95AF73634BB20EFAB3E95C048DE1CEEDE1DCB1C08CB6924C840F480811BA2B5ABDBD03C8F03CF3040736B4F7388FCE60903CC9388A57AAD640BAC9F1CD9D7FEC5EE8B6D3534DE44BF834F656FE3E92F26D92DD02A21D6A0EB0A42E5ED009198A473210029888785
5850C2E54B0C7DCA7412EBF56DE3AFE0A6CB9CFF39A11895DF5F7800609CB2DC5372F8332B0447B9EDC4F0607BE1CAAAC3170B3F883F195FEB9118BF63BFD1DE71E83B6493076E60A24254B7593725E5FA476FDF5B8CA1CFFEB90D0EEBBD44D02EF07F5CF3E8F12CCB517462A36E22714DB45301C47E28ECA7312CCD7DF618D4C35F6CFEFFDF78CE35351A1622619D900F484419766C8BDB5BBBB72BEDC0CD7475ADEE96E58AB35F138A4DAB6B98301A88E1419B19FA3918ABF21719A2925FAC81B76061C11241AEE57BE905F693C32679377112F15EC2551F21AB9F6C329B2BA22B6AC6EFAC9A9955FD359003D138272A5D8A242FAB3582C19945D4E86080F3B39543FC6F951FC702EE42AA525FAE9BE383FA9E71F71D0A56526D351B43AAEA62369EB27EA90FC28A0AE45EDB53DD0F933331D3AD9C979D81EB5F40FE2B5DF1B58E15C3FA9D2786E0A9AD1A31FD2CB6CF1712EE3C29889FA36C7B62EE2B4162CF75029A333932049426F3E1637982140D08B6414BCE58BAE79A4AC56CCCDF2D3F6AFC784CC366D9E270D4488DD098209C0ABDDF617A4283B80E595A7FB2811A9E3AB793ABA77249BE6134D4962BBCF96BAFAC9F2A5D5879CED4D65F291CCCDC12178919AD11A2057F49CD53F00C79F1E12545789028D7174902A750E82FE62F3CBD2E779D9F7103C237BF98A5E752E18EE9B00387030E67EA9D725DC50DF774AEF498D44FC7064D44C96B3CAB6657ABE4DCC50A3BB8F190E1C8DD2E905664B3BA9746E97DAF989AFAB1B0E229E7DCB396194B61DFBF1F83D4E46F249F8E3CE01F5A45A502B8CD80BEE7BBCB457BF1C6FC8F965112858DB5A118C862D16E75C787CB8B37FFF0519D8EA257D9C9B4C1E5BF0D929EC6E50EE82BD314852B85DAE3752218055031851803C3317D8C7DB9D426C9D1A101E04FF35E7CB96C139EC81DC9E42EA1DA73F9C09CEF7FDFA14E153E4D3B374BD9C4DB27A85919A5B0BA589B1E0BF0E1C830ADDB3526FC932511FF931710AA435AAC366D42D0844D26E217451F904F30C7A7C694341D502FE94A638A6972DD3D2A74A044F555CF2ADDD84877DE7238EF0F30559F0CC079AE75199C708687D5112173DD077061B8476949C6E046A98A4FBA9BAF4303F35CDCE20CEC7D295A19817AEF92D1A93D3E057CCBC7E14491E7D124E8C66EBDC135733A4F1346B0FE23F48391D8D6626F1452CD50D775DE4D6B889A61BEF9FA980D687C04236416590FBC6B87FF427570943CE8A02C1903A551CDAD45AED488E015A3018DFB6CC18C7B3EC00A992DE58DBFF62AFF9CA1B0DFD4D3790FC4003E2A7965251F583217AD8AD881FA32327810733D6EA4C99394BC65F0329E96A9F9EA6A3021899D8C1A4D7E0D5D7D7E77E389385EDD54CECA3491A274A81ECCC707881153146148C86BD03BF85D4538A60FB3BB40E2CC7D2B
963DCAC66EEE9142FCA25F6B0923CF85DB7862AB752B1A340B5598FEDDBA7AC7C5137782FF2AF1E0722D8CD096302E9C02AE4E266CC85C907CF6180FCBF82C03F118B93BBEE0A2AAB888EAD2778753FFE8E39E088E3F319C07DD0BC8F1274B78BA6F19410FE4920CE31AEBCB7BCAF3F25B87DFCD71F9469A7D54E35364E9489658C71D3E08503BCFFDC5DAEDA59C1B5C92B2EA39D7682F0736931EDA5BFE919A826F1DA31571EFC6AF9E661F0A35000C753D1F23C1214AB375CB1710CEE375FF8A214DC2C808A0FD0CBCCA1067F47B40F7A639ADDABF52512D2206EF9B098EBF40DD7ED6F377A5949847A28951F6E3CCBC8238A61A121D052A5B636AD361FC147CAE0510116CB2BB5EAD297FFCA4DA922DE39F15CE77717453CD7DEC9BB7B56201C5BE9FCD116F6DDA0EE74EF731BF0254FAA1B0A8AC5B07C37BAC27380F3BDB51CA00332DA2DFDB6C372635256DC6473BEF568D6D3ED4056A8110AF42A40FABCE550C5DC94724BDBEB72137B5B4D138F15A42A965F9505E7EB137EF739C5833782B5D39A5C39B26497081679FE6C0D9F0188C5FACCF031B90BCF5414BB80B6060C471AF3FDDA03861B3BF312B69444E55CD83D86316299F8B2B9E9AC4732F7C79BDE11D0F361FDFAB07763A928B7DE4C73C07521863B15F1F8FB03A0B6D82325055F2A1A8BFEB6FAE5CC262C5640EC2DAC12F052CBC901C433390CEFEC70A85B45C12401E9D5857759F2CE7100321172E6EBF4A8EE6C48AB30A64545A383FD7B04D85A0BC3D313B2DBA1E26E6B3864659CA2C6701ACFF667A8BC259E54F9D13F51C4E6908A4FB5EC59A51883C64188F7A76BFAB7E350974ED4BD26E40F658E62A8ED4BD6851B1D424A60BDF099977697A2628A9FC2CE73097549477AD636480FA6F539B9C5C671BD76824BD20E9D9408517A897A5F0D85A1F450F92CBACD50229D17DBFABEB7BA970FFC42DD0A7A2E4941BFC1EB12C4016C08BDB508032CC56355A050A91469CE09DCE5CD6460AB0F00A06A548FF8860B6E940F88E1E075CB6307AD8D0B257CA8B8C178E4F0FD442E470A765581F8F2D61A9E11E068E9F0A638798FD4C7AE4D59BD515B6ADA4B80540BA55332340A36C7BFC796846459A6DE3E27AC3088A66C8994DBED77C56C2698827E603776884C473FCFF6B13D535FBEDA0ACA655295ABD20A8E6D04A239AE35A0242B0D0A376E381FFC3148AEEA0D41644FA6C801062A12F50D0E65ED8BA79F58288F45F5B7E8A9C0FA76FE3DE17880EF20CEE44DF87FCB464E5AFE67563C8B5792E96B453A9B073C6684308222878BDB43AFA8D7F688254F88DAA9A0B63924554DD30239DC13E868D6525955555317E5F414B2864BF8537E78E9C5ADFA8F8BA7BF55730CE8FAC03C656995B9C4973211F1C4126223AA0D685B470E79FC6E2D641D224F86AE368FDD394F99E34279C23

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AvenirNext-Regular cguidfix
/F1.1/AvenirNext-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 sc
q
0 0 695 271 rc
1 0 0 -1 -163 427 cm
/F1.1[ 16 0 0 -16 0 0]sf
168.6265 218.5 m
(!"#$#%&')[ 9.472000 5.072000 8.544000 10.160000 8.544000 4.000000 9.280000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
87.5 232.526 m
156.78 232.526 l
156.78 198.026 l
87.5 198.026 l
h
87.5 232.526 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
250.5 194.474 m
319.78 194.474 l
319.78 228.974 l
250.5 228.974 l
h
250.5 194.474 m
S
/Cs1 SC
0 sc
0 i
275.75601 216.724 m
(!\()[ 9.472000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
178.5 232.526 m
247.78 232.526 l
247.78 198.026 l
178.5 198.026 l
h
178.5 232.526 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
341.5 194.474 m
410.78 194.474 l
410.78 228.974 l
341.5 228.974 l
h
341.5 194.474 m
S
/Cs1 SC
0 sc
0 i
354.828 216.724 m
("\)*+,)[ 5.072000 9.152000 9.296000 9.328000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
269.5 232.526 m
338.78 232.526 l
338.78 198.026 l
269.5 198.026 l
h
269.5 232.526 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
432.5 194.474 m
501.78 194.474 l
501.78 228.974 l
432.5 228.974 l
h
432.5 194.474 m
S
/Cs1 SC
0 sc
0 i
455.42801 216.724 m
(\(-)[ 9.296000 0.000000 ] xS
/Cs2 SC
1 0.25 0.25 sc
CM
360.5 232.526 m
429.78 232.526 l
429.78 198.026 l
360.5 198.026 l
h
360.5 232.526 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
523.5 194.474 m
592.78003 194.474 l
592.78003 228.974 l
523.5 228.974 l
h
523.5 194.474 m
S
1 1 1 sc
0 i
541.46802 216.724 m
(.#",)[ 10.112000 8.384000 5.072000 0.000000 ] xS
/Cs1 SC
0 sc
168.6265 281.026 m
(!"#$#%/')[ 9.472000 5.072000 8.544000 10.160000 8.544000 4.000000 9.280000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
87.5 170 m
156.78 170 l
156.78 135.5 l
87.5 135.5 l
h
87.5 170 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
250.5 257 m
319.78 257 l
319.78 291.5 l
250.5 291.5 l
h
250.5 257 m
S
/Cs3 SC
0 sc
0 i
275.75601 279.25 m
(!\()[ 9.472000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
178.5 170 m
247.78 170 l
247.78 135.5 l
178.5 135.5 l
h
178.5 170 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
341.5 257 m
410.78 257 l
410.78 291.5 l
341.5 291.5 l
h
341.5 257 m
S
/Cs3 SC
0 sc
0 i
354.828 279.25 m
("\)*+,)[ 5.072000 9.152000 9.296000 9.328000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
269.5 170 m
338.78 170 l
338.78 135.5 l
269.5 135.5 l
h
269.5 170 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
432.5 257 m
501.78 257 l
501.78 291.5 l
432.5 291.5 l
h
432.5 257 m
S
/Cs3 SC
0 sc
0 i
455.42801 279.25 m
(\(-)[ 9.296000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
360.5 170 m
429.78 170 l
429.78 135.5 l
360.5 135.5 l
h
360.5 170 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
523.5 257 m
592.78003 257 l
592.78003 291.5 l
523.5 291.5 l
h
523.5 257 m
S
/Cs1 SC
0 sc
0 i
541.46802 279.25 m
(.#",)[ 10.112000 8.384000 5.072000 0.000000 ] xS
168.6265 343.026 m
(!"#$#%0')[ 9.472000 5.072000 8.544000 10.160000 8.544000 4.000000 9.280000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
87.5 108 m
156.78 108 l
156.78 73.5 l
87.5 73.5 l
h
87.5 108 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
250.5 319 m
319.78 319 l
319.78 353.5 l
250.5 353.5 l
h
250.5 319 m
S
/Cs3 SC
0 sc
0 i
275.75601 341.25 m
(!\()[ 9.472000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
178.5 108 m
247.78 108 l
247.78 73.5 l
178.5 73.5 l
h
178.5 108 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
341.5 319 m
410.78 319 l
410.78 353.5 l
341.5 353.5 l
h
341.5 319 m
S
/Cs3 SC
0 sc
0 i
354.828 341.25 m
("\)*+,)[ 5.072000 9.152000 9.296000 9.328000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
269.5 108 m
338.78 108 l
338.78 73.5 l
269.5 73.5 l
h
269.5 108 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
432.5 319 m
501.78 319 l
501.78 353.5 l
432.5 353.5 l
h
432.5 319 m
S
/Cs3 SC
0 sc
0 i
455.42801 341.25 m
(\(-)[ 9.296000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
360.5 108 m
429.78 108 l
429.78 73.5 l
360.5 73.5 l
h
360.5 108 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
523.5 319 m
592.78003 319 l
592.78003 353.5 l
523.5 353.5 l
h
523.5 319 m
S
/Cs1 SC
0 sc
0 i
541.46802 341.25 m
(.#",)[ 10.112000 8.384000 5.072000 0.000000 ] xS
168.6265 405.026 m
(!"#$#%1')[ 9.472000 5.072000 8.544000 10.160000 8.544000 4.000000 9.280000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
87.5 46 m
156.78 46 l
156.78 11.5 l
87.5 11.5 l
h
87.5 46 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
250.5 381 m
319.78 381 l
319.78 415.5 l
250.5 415.5 l
h
250.5 381 m
S
/Cs3 SC
0 sc
0 i
275.75601 403.25 m
(!\()[ 9.472000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
178.5 46 m
247.78 46 l
247.78 11.5 l
178.5 11.5 l
h
178.5 46 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
341.5 381 m
410.78 381 l
410.78 415.5 l
341.5 415.5 l
h
341.5 381 m
S
/Cs3 SC
0 sc
0 i
354.828 403.25 m
("\)*+,)[ 5.072000 9.152000 9.296000 9.328000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
269.5 46 m
338.78 46 l
338.78 11.5 l
269.5 11.5 l
h
269.5 46 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
432.5 381 m
501.78 381 l
501.78 415.5 l
432.5 415.5 l
h
432.5 381 m
S
/Cs3 SC
0 sc
0 i
455.42801 403.25 m
(\(-)[ 9.296000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
360.5 46 m
429.78 46 l
429.78 11.5 l
360.5 11.5 l
h
360.5 46 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
523.5 381 m
592.78003 381 l
592.78003 415.5 l
523.5 415.5 l
h
523.5 381 m
S
/Cs1 SC
0 sc
0 i
541.46802 403.25 m
(.#",)[ 10.112000 8.384000 5.072000 0.000000 ] xS
/Cs2 SC
1 0.25 0.25 sc
CM
451.5 170 m
520.78003 170 l
520.78003 135.5 l
451.5 135.5 l
h
451.5 170 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
614.5 257 m
683.78003 257 l
683.78003 291.5 l
614.5 291.5 l
h
614.5 257 m
S
1 1 1 sc
0 i
644.56403 279.25 m
(\))s
CM
451.5 108 m
520.78003 108 l
520.78003 73.5 l
451.5 73.5 l
h
451.5 108 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
614.5 319 m
683.78003 319 l
683.78003 353.5 l
614.5 353.5 l
h
614.5 319 m
S
/Cs1 SC
0 sc
0 i
644.56403 341.25 m
(\))s
/Cs2 SC
1 1 1 sc
CM
451.5 46 m
520.78003 46 l
520.78003 11.5 l
451.5 11.5 l
h
451.5 46 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
614.5 381 m
683.78003 381 l
683.78003 415.5 l
614.5 415.5 l
h
614.5 381 m
S
/Cs1 SC
0 sc
0 i
644.56403 403.25 m
(\))s
/Cs2 SC
1 0.25 0.25 sc
CM
538.07751 108 m
607.35748 108 l
607.35748 73.5 l
538.07751 73.5 l
h
538.07751 108 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
701.07751 319 m
770.35748 319 l
770.35748 353.5 l
701.07751 353.5 l
h
701.07751 319 m
S
1 1 1 sc
0 i
724.00549 341.25 m
(\(-)[ 9.296000 0.000000 ] xS
CM
538.07751 46 m
607.35748 46 l
607.35748 11.5 l
538.07751 11.5 l
h
538.07751 46 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
701.07751 381 m
770.35748 381 l
770.35748 415.5 l
701.07751 415.5 l
h
701.07751 381 m
S
/Cs1 SC
0 sc
0 i
724.00549 403.25 m
(\(-)[ 9.296000 0.000000 ] xS
/Cs2 SC
1 0.25 0.25 sc
CM
624.65503 46 m
693.935 46 l
693.935 11.5 l
624.65503 11.5 l
h
624.65503 46 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 427 cm
787.65503 381 m
856.935 381 l
856.935 415.5 l
787.65503 415.5 l
h
787.65503 381 m
S
1 1 1 sc
0 i
809.13501 403.25 m
(23,)[ 8.000000 8.544000 0.000000 ] xS
2 w
0.60000002 i
0 0.32852089 0.57488495 sc
247 185 m
504.5 185 l
507.26141 185 509.5 187.23857 509.5 190 c
509.5 234 l
509.5 236.76143 507.26141 239 504.5 239 c
247 239 l
244.23857 239 242 236.76143 242 234 c
242 190 l
242 187.23857 244.23857 185 247 185 c
h
247 185 m
S
0 0.32852101 0.57488501 sc
338.39001 247.25 m
595.89001 247.25 l
598.65143 247.25 600.89001 249.48857 600.89001 252.25 c
600.89001 296.25 l
600.89001 299.01141 598.65143 301.25 595.89001 301.25 c
338.39001 301.25 l
335.62857 301.25 333.39001 299.01141 333.39001 296.25 c
333.39001 252.25 l
333.39001 249.48857 335.62857 247.25 338.39001 247.25 c
h
338.39001 247.25 m
S
429.39001 309.25 m
686.89001 309.25 l
689.65143 309.25 691.89001 311.48859 691.89001 314.25 c
691.89001 358.25 l
691.89001 361.01141 689.65143 363.25 686.89001 363.25 c
429.39001 363.25 l
426.62857 363.25 424.39001 361.01141 424.39001 358.25 c
424.39001 314.25 l
424.39001 311.48859 426.62857 309.25 429.39001 309.25 c
h
429.39001 309.25 m
S
517.39001 371.25 m
774.89001 371.25 l
777.65143 371.25 779.89001 373.48859 779.89001 376.25 c
779.89001 420.25 l
779.89001 423.01141 777.65143 425.25 774.89001 425.25 c
517.39001 425.25 l
514.6286 425.25 512.39001 423.01141 512.39001 420.25 c
512.39001 376.25 l
512.39001 373.48859 514.6286 371.25 517.39001 371.25 c
h
517.39001 371.25 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 14 0 0 -14 0 0]sf
307.673 175 m
(4#*\)5#%6\)%7\)8\(9*2:#7)[ 6.804000 7.476000 8.134000 8.008000 3.528000 7.476000 3.500000 8.918000 8.008000 3.500000 6.216000 8.008000 8.890000 8.134000 8.008000 8.134000 7.000000 3.500000 7.476000 0.000000 ] xS
530.29401 189 m
(;<\)6:=3,)[ 7.448000 4.788000 8.008000 8.918000 3.500000 7.000000 7.476000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
