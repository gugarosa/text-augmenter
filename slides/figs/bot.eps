%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 490.000000 198.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.6 (Build 19G73) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 490 198
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 490 198
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AvenirNext-Regular
%!FontType1-1.0: AvenirNext-Regular 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /AvenirNext-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /M put
dup 34 /o put
dup 35 /d put
dup 36 /e put
dup 37 /l put
dup 38 /A put
dup 39 /P put
dup 40 /I put
dup 41 /B put
dup 42 /t put
dup 43 /U put
dup 44 /s put
dup 45 /u put
dup 46 /aacute put
dup 47 /r put
dup 48 /i put
dup 49 /R put
dup 50 /q put
dup 51 /ccedilla put
dup 52 /atilde put
dup 53 /E put
dup 54 /n put
dup 55 /a put
dup 56 /f put
dup 57 /ecircumflex put
dup 58 /c put
dup 59 /T put
dup 60 /x put
dup 61 /space put
dup 62 /fi put
dup 63 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -394 1 index div -411 2 index div 1309 3 index div 1192 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000001A6670676D00000000000000B800000173676C7966000000000000022C00002990686561640000000000002BBC00000036686865610000000000002BF400000024686D74780000000000002C18000000846C6F63610000000000002C9C000000446D6178700000000000002CE000000020707265700000000000002D00000000720014003600400090004800000012FF10000001D4000C02C400120000B800002C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D00000400000000020002CE000300230027002B0049B8002C2FB8001C2FB8002C10B80026D0B800262FB900160004F4B8001C10B900250004F4B8002DDC00BB00030002002400042BBB00250001001900042BBB00040001000100042B3031373533152F0134373E01373E0335342623220607273E0133321615140607060706151711211101112111DE3835020D07161110140A042D1F1F2D0632074A3636461926250606BFFE6401CEFE00754343751138190D1D110F1713110924312C33084841473C20352321131434B80269FD97029CFD3202CE0002000A000002B202C40007000A004000B800004558B800022F1BB90002000B3E59B800004558B800002F1BB9000000053E59B800004558B800042F1BB9000400053E59BB00090002000600042B30313323013301232721372103594F0132460130504EFE921B01389C02C4FD3CBA42017800000003005E0000023802C400130020002B011BBB00200004000000042BBB00060004001A00042B410500DA001A00EA001A00025D411B0009001A0019001A0029001A0039001A0049001A0059001A0069001A0079001A0089001A0099001A00A9001A00B9001A00C9001A000D5DBA0027001A0006111239B800272F410500DA002700EA002700025D411B000900











00>] def
/CharStrings 33 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/B 3 def
/E 4 def
/I 5 def
/M 6 def
/P 7 def
/R 8 def
/T 9 def
/U 10 def
/a 11 def
/c 12 def
/d 13 def
/e 14 def
/f 15 def
/i 16 def
/l 17 def
/n 18 def
/o 19 def
/p 20 def
/q 21 def
/r 22 def
/s 23 def
/t 24 def
/u 25 def
/x 26 def
/aacute 27 def
/atilde 28 def
/ccedilla 29 def
/ecircumflex 30 def
/fi 31 def
/u0459 32 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-394 -411 1309 1192} readonly def
/UniqueID 4446589 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2803798CF70BB8A1CBECCF3780F5DE932E1E3200B605F774AABE5460DE623BB304297F50C4EDEDECE87CD25C056B8D54D994D43F03B9DA94A9C7174F052857ACFC5914CAF36AF2C35028DD350A88EF2F5ED7D8EB42299D2D0D1FC1C5BABE0D1FE04E5363F40BE63B44B0CE970ED1BFFEEBB6BA2F1A73DF32CF9F38049E4BC14CD85DF909CFAD2B64A230D8229263470F89F560A45C86D86BA276AF1E4A3562255CA4176227C8A0A154D2517DFBEE6F1AF4F08D1A724C35FB7D4A75C0F758D6DD07C6919A44272F9F2051CCCF6568AAC9583C35D7AE70E0655DC149278EFB87128561F536BF393AAF415BF2E9E4A22847A2F9F322B34405836CD5BA83F911B1522CD0D8375F36BE4B08F88C9FE93762818C19469A5E86234C145748DB0E4D16B231000013C9E2D37C7CEFEE10353082C7A4557B8366DA94BDAF8E06B2CF745DAE00CE501A6309489CDBB23B5C8304DEE5EB9B0948645D10700852A111CE1B22B46722B4D2C545DF630C251733C125799FE3ED43499A2DC21B08CEBB4CF3BFE62A654447E814D89A5A1628D2EA6AAB2B52FF77BBCAAB79497411106C5A2C5E2492B940478698AACF1E9564C8DA45DB84DA4E13BDB6074DF9E8DFA553EDC04C3F0DD7403F16C106CAE034510533BB54FB62CD8A23D9E8227A4ED02B6EC0B9793AF62FBEA84CC4A0ADF242216D7D48250F339BB8E0764E6328625B7632148C47D1F2B323FD82BF7089525282DAD2E218E471343B5AF2708DDEC0C129BDEBB386316BABDC2851A
CCCAF638797CE1EA6545A113E1ABB120C5A23E6BDEAF9931622AF65BDA8E1A592C6C945BEFD22C64BC5878C1085F398AB7D90BA77EB1C298C87331A664E1E4FCD43BCB6AEBFF2281E6B9CF45B6818C33FE367802F7BA6F3FEEA0D2259849C63BE4E819E63B555413788A4177AEF0DCDD0149023D9640BA2A802B05997005B6FD82282311BFDFCC221491AB1F938ABD67F0B06E87382725A1F3BDF6FA0B3284BF3C4CC5F5A3B4D8B21B78987AC23E3B707F6A94C021628018181F1DE4F242C24564F7FE554647C93D6F58496A38FD08FB9746313903D15CB08E32B7811A3D35F7B32D822612C57FF339BE355194724E89D6B29CC0DA26BAEAF027727E4A556F803AF516ED8F80F516FDE34736D9937D7EB8BF50F6C37B3773A474ABD08D370C72CE8ADF137D9A3E3E566B526ACD727325622BA0F51879BA3AB39FC03736357FAF0E2FCA67C3FBE65AEDAA1884045E392809BDF827DEBD02039DB0F12B28AD96609AE3A7D3099FC6797A46EF817CB60FCF93175B213592076408C5D18484315C89046889F617369E42116945C595B011D60D6A34EADDE6069ADE376BB491DE4625A4356D4B83B637476461E67ADBFE24DC4DC51C6497D81DA9D6DEFFE7294B3F05837ED705886C78A3FA29E01A198CEE7D7F370D475B4B5F3926A559990E9E9E750EFB1C58CCE48CA5319F29E113EB6F3CFF006154C43E1751BB88109438D0D9C9B02E3708A2C6E1EC070D0E6F711B1807510B143639F00CFBB8D1A1EF664F8FDE4E2168AE44BF3E570ACDB6AA782207584B6A747F9520ABCB53565B6B82393827676C3B90901FE4A27D1BEC15104307DD0AF6F4204E7A49AAFAC655E75DD0DA8CF7A1EAE726EEA59B6803852C29954A51509D4E31317F195E3A34B0FC20A727629C3C996794C9E88120501145CCFCC5060B02207A46A95CDD3E4142D0944D365CAA69F4B3A3FD6F2B375CD4C8B831B83CFF6F89E8833F769278AF1799BFB7FE680B58D6496AED2F07E0C8F8A3359BB50411C583C776852921F98D64A40F5753D8BC727146C9A6CB20436A2B220ECE3C1B121E39767C21AB08DF1CC0842CB8827473539F61EE23356E25D4E7BEA9E5B70519E4A97FF71D0EE1E6AA685181F333B68B90D288E4EBC911105FC4DB844F0106BC9ECCC40D09EDCA3DC987200D671D594433F55BD99AD73531D5BBC0487BC7630323F009A93B525285647FA4F256CB9B85EA9358FC46BABC40B6450A75FA1F7B77437D292823138682B232BFBE7B20722EA39690C815BF15089E4844D680D18F43C788127F5F4DD4DF413957FABF04EB9593FF0F0032AB3324C6E01BFD02C9FA8813884D3D8BDE2B5728815D8B886D1E59C055786784E45FD5A895379BC666A091E84015FF55AAD8AE25003842DF741614D22EC3B5777F5F871CC5832B17E45AA600F3936D46857487AD68EE437DD3B2
DE7F42873F25B6F677BE8A7F6E271ABBF9E1FA8394EC38918A58ED7485B416F18FDAE5F16C428DD313AF6BD2B3455D6F050AF569EFB69889C6D4E0F8DE78349AB64899F77C2347A5138FB753305030F5900B5D8D860E689B2F6D1680ABED7C8950072A2B481B7645E41B4B08DA38C6494F73B2BC8816E57CA294DAF0DD77147852E4C46E58B17E9D7B865DB84481F54B7F4A0018069B94439B4A869B0732E8FD2F6F7FEA42B73B04B16CCE6A6A05B56A0A8956E42DAB665399311C0023B9F5D1EA221D6A6BE841CE34CDD0F7DE9FCA19D233C81D5CB57E336D4232A347DFB298A0147F0E08D1A3A756BA235C4D225F90F390A6BF1F217F1893D57D03BCF125ABEB947DB9F965E2FD13154EA5414723EA46F2D2F4AEEC137D7E7C543D44E8EC94D3121E1BA3500BD6DA35F5EA75A9D072264452F1211488254B63C2D16A998BF3F6C1A216C4CB8F278E92201E09137A6408BDA4FCC635586D0AAC933E6DC6FFFBB90571D7ED561FC9EFA22C4EB5A1D0288A89D64520346566BD7AC46D63978DB4249C16224E6357EA82CAF8879BDE502FC2E1A2E91F560F789843F43A438F152CFABA7ED6A2C5F7990C49B098FBFDC74635DDC6191A950AB39743FD533B916FA949F2477DD0548F853444D5959D000C9B71064BD6A7B9E385754F7A22FA13D731F455D091A4825DF3766E5A382432CE18E2E7329AFCF1C82D699AD45EC1D28F216E1A0232C17611C2AAC46923EA9412D454E537D6F01A93EE1AD2279710E13220344B0CC1AD37318C8BAAD1FB767B4735EBBB5FFD59722C5499493CCF52E25B7EF5DE1914EA801CCD5CA7DB74B9FA7FD2C470F33A948A65592E6BFBCF474D1A9D38DBF915F399010BF1DE3B7EEC639830E47FE6ADD499ACD8CCFC9F5103A35E57A90CA6BEEA51EC61A947965807E659D54448CEA3F2F2A8286CB5D9858272D3D251F541E48BA0C2F0B13551A8526E9ABD8807F8BA6F7341E3B63D6128A33286523896C3FD1C6A4170EDCAEBD389C0B3AB22917F9F065C964E360BB66836E468A8FFCA352D5D454A3AA0BF5D6C4984EF1827AF0D3C70197732A95B6BCA4A36F2920ED556FB646A69E7DBFF03CDA6DCC79B97BE0DC78BF196938CCE1CB820F21B0CF50F986B1074EA1A173532B19204D2176E68097B58B814EC35465618845E9F0C4F2E2936FEFA77BA978D2C99791896A9E5FECD7DA33B2AFB4746FB2464206B8C8335921F392EB1333C3AA0D65BFD8F151D4907BA1ACA05E41ED0BBDF062D06290D73943BD5D6348969F39339479B087D23A92A3C13E265990B08902032AAEC9169CA1EF315078A853B02EFEE1ADBFB7B793CCE02D32EC691186A3ECD5B6DE845CCFDA53DEDEC1292195ABD229D223901972B5C4607B9534DB42B72E5DAE6F0C153B87F9F4A4DAEE23CF71214736524E9053E8332778A0D755885F3F35F308DA1
305C8C807B2461C3A9EFCC902C3FEE0CD56E7A240E48FFFDA36D5FC31A145B014A440478206B8F11F6A2FB0D22DADFD4A7F3150EEBA82E1EF81113B51BECCFB571346DC77A22496E22593EB3A5D9D79026231EA426BDDBBEACC436E4691CC675602E41E7CDA0A0DD7E9D4EC514F0774BB07972895AF463F0229D79AD59A90030DD32DF07490523DC0497BEF0A4CE41463675C93AC21481182A15A1E330C1ABD43A896DB601B0F20E7AA0EA3D7E245917DBDCB060220BBA04CAB91C91C428B76E8AA2DB4370901C41017C8EB6CE44798E2B3075006DF68C0AEC76478FF84C960B023A3E40EF1290E1DAC312F54A63BEA812DC01172ADD434D41DC62ED302D4E9A8FD5FC164094DF64FA3ECF6E4D42D4E9AD97EB2227348D227FD00E24BFA7840EA9E55ED66BAFA3EB966BAF1D2700EF70A8BE52AA55624882542B43A6B1FB250AB18D17EE29D192B04C071BA0837E8FC76AB48D6C009BCCF0312A43F62E7045D5104F073AE857175D731C481F829681B68F556369FEAF5BC1792C35533BCCDB6E13A5D1051DAF4163A650B6FA0D7B1A5802C1335DB37F2F601D7C743DA127CDA76D0F417C5F84B0706610032195D03349AC860B8A65F0CC128CB89793645749D641CA85F6A4E38B8C47E3C97CDA5F9C1500BCC1CFC2CE0F194601ABCBE6C12E7533D1841D209DE580F95E27866050C979080FDF6A79C369D5A6F728E5511FA092F67F28EA6B9445E1018BE2CF1056D1F01E9BC44B8C45B70AC4D63775E93AFAAE2546EF06346FD165970B0FD8212C499FCA6D288D189C0AAB47FB07A998F6078FCCFB6BE97DEA1439E0F0BAF823B1DDFBA3250838F8C6082BDCF60BB0288AB647B319F981D8A66078B1C41DA7CDB3BBA3DFAA8BB39C5CA4D97A3E2464835E129FA0C6D077E623E5C0B5BF9E5E70FC8FDFF8C7E53C05CA75A9CB3892C2E40967D81E06E81E29015CA73DA377CDE2E8CE9B1442E9CBC577DF51EBEA37F3E24F2FF5CC5E3CCAC32CCBBFB3ABABC6C6F1946B37615522234F10248F2485C58237184282AC47F28BC1E140DA288F8E16B3D24B0B3D763EA764B545DE4F4D3B78FCB822CC5332F4F507546E1F54AEDFBCC94770EDE0A198A2D48D35DBA1DE775021773384BF453467870146DC4E5E5E101071E4BECCEDFCA7C4267BFAD69068B4CB13D7CE638760D3A45382FB996D2D58DE7E32534718FBA00370496140F02D029F7CCFAAA33BF3A01450270A4311B7839C69CE829E87F10782E1D8BE03BC0E22C3EFB79963FDEC4DD75FE04B8D5C3CF12500ECFF5C04680BCF1B25F1D82FAA3F655A349A1E88B27D8C8BB2A67E46B17A2106BC13299B9FA570B76F4617807619ABFFB879E8AF8AD295F1C801B8C93D5DD168CA2A92B344F5DE94C2427FBD3C9DCEBCA3F1E6E15CD500AB1F22D2FD15948008F71475871A71A08F731BD4E88C98A18EB8

ABAF58679EFD3356FC64194ED4C18DDC6A45B6EC6ED6DFEA2BEDC9E739FD4BA458F359DA575974E38CF3148C068FE99DFDE9B042BEF76E40553110DC3FFEE3CB76F5C0E30F046985AB08E2BB6B85EDAE60CD20E9D07E422015F81AF835F47DA008DB050A54DD96832E6687C4206414364068DD4181FA61B20F9FA0529B15DA1766C93A72FBA53C37286103DED32D109E0793DA96E7228293AE3DA901BCB1B26F1552CD574332D45CA9B3AFBAA5DF86CDE8CF498073E12359D9A2996EFB54973586EA269C40C3AAA6CDEE3DD05F6BC68A5F2AF4C4C6332D3A90B693E9966321FF5C4B88A8C30CE4E94EBA9EB664BBB7B4B56C62C1A8064C459EE3D98CE4389C4F261132612D55B280C0B7D081BB5758F409D3BF51D4BB9B04B925BAA9354F79D7ECDCF0EB0857D1551D0EDD800101D906E1B9C0396325BEE3B26027D79B514B9D6E4B57424BD543D36F72790D2DD6A2E9DCA2E3719C68988D4914615418EE0C3A0B2BAA5760097E0205827674B3AB56B50B9654E94880A842C5354316A5B6CE9313B7E2E0FF2EAD524D2955A0E6AD5B3347051CAE90A0D1A8890E600A7E9F1068F97686FEE8802822779D4BA56863AE7E5376DDB560213C9C9A1CCB0C1B751EE2C1934216FD98CD4B10CE441F91612DF86649A4A968BE8B16BDB7CDCA9E502C07F1D78E32D01B65C12D3E718E13D4F725C6CEBB73892DE6ADDAC8821C624F7EC5248643D01E0CE9582B7C044C65A04B6B9247602AEDDC67BE3A7F7550305A3C97033180E23730C8809BECF2C0510F1F8A37EC656C93BB5BAE5FA4708C86F48F50F532806B9F0283C3F4320290FDD51972B0CDCC9A944507E542104434CC138AB49F654A2C2F770D853E930C967E8F017A32DF1DC530ACBC2C94F75B06DF610C9EEB6B79B3B4013C7A1528AFDADCE056348750E20F8CBF83469FBC9B3EBEE6581B65BC73DEA6893860F208DA0FC2DDB0BC7C743D4A51720388E87038CFA18A5BE78D0400D50DD6621D37F7A841CE856B71CEDA76F64F66F87F3E1528623CF039A678D0E588F879D6C573CC402B00FA7901E90FA01737EBAA674103867D306CCB3973AB7E19987E63373E20334A8AB79C09E6EB6B858EA4DEB8DD80415092FC746C71165A9B755CBE68538BAC95A69D477AF3B85FA417B42D166BDCAA970F1B4EF4FD7E26C36E3B8A67BAC471DD15608F4539DE8E91918C46D58D2A9334310591A73AEC9EE7D362599C226B286371F1D61291881E65F252C511D5B1FCB98E48B9C90F39D246CBD0648837F851C6F7DC3C6B9CAA7F8C34021AE124D778C2482B107ED3D25D1286999F47CEEB3E46A265421EF262F0C6E8757ACA29990B8E2B510257ED37EF0BD62CB0B95ECB41F3232F887560D7EC6C9796C29441072F6967EBD557BD60C2FE4AE000437A05A112D7C72E516EA62EC96F3D48FE1C002277E1E3D863
53F8E34D2D177CB42DA8FB29AB75D46E05B32744D7FFC84FCF9A821BFC8D42F310A4F1CF028FEB1A050008F33E7E6527F17995B84456F23798D34F7DF678CDF86E48CE6C92CA375122887BF555CD7E9804597B9016DD0F6C21925AC7DCDCDAA95F338742AF7B68AC51B02A2B1FE05491760751193DAFC09EFF55D86DDABAC23996C12AF5F8AF40CE8AE93067F595418504AEB3E0A289EA486D4B2C3EAAEAD75DDC98F60A86CD4687F9BD19B873CDA8E55C4C90696BD19884BD6862600F891806462614C4FB44C7DE8DDA24E7A94D62C059AD86B26D03BF5ECD3EB310915A68170C20B9A60E2C7A0DF7168297DBA6E67F56C0C70DB0DC6A0C0359297F9C4B03396D2AC8DB6FD789CDBEB760B380E16E61D4868E94D2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AvenirNext-Regular cguidfix
/F1.1/AvenirNext-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 0.75 sc
q
0 0 490 198 rc
48.181999 134 m
48.181999 190.7 l
55.431999 197 l
120.682 197 l
120.682 140.3 l
113.432 134 l
h
48.181999 134 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -151 296 cm
199.18201 162 m
199.18201 105.3 l
206.43201 99 l
271.68201 99 l
271.68201 155.7 l
264.43201 162 l
199.18201 162 l
199.18201 105.3 m
264.43201 105.3 l
271.68201 99 l
264.43201 105.3 m
264.43201 162 l
S
/Cs2 SC
0 sc
0 i
/F1.1[ 14 0 0 -14 0 0]sf
206.82401 138.14999 m
(!"#$%")[ 12.404000 8.554000 8.918000 8.008000 3.528000 0.000000 ] xS
/Cs1 SC
0.75 1 1 sc
CM
50.610855 43.186588 m
35.822624 47 41.719799 79.102654 65.310333 73.625 c
67.499008 84.302689 94.931625 82.56958 94.752281 73.625 c
111.95337 85.065231 133.93533 62.253639 119.19102 50.813412 c
136.88345 45.266891 118.96776 15.38299 104.44762 20.375 c
103.28558 12.05451 77.327942 9.1428003 75.049591 20.375 c
60.351028 8.37955 29.70219 26.823219 50.610855 43.186588 c
h
50.610855 43.186588 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -151 296 cm
201.61086 252.81342 m
186.82263 249 192.7198 216.89735 216.31033 222.375 c
218.49901 211.69731 245.93163 213.43042 245.75229 222.375 c
262.95337 210.93477 284.93533 233.74635 270.19101 245.18658 c
287.88345 250.73311 269.96777 280.617 255.44763 275.625 c
254.28557 283.9455 228.32794 286.85721 226.04959 275.625 c
211.35103 287.62045 180.70219 269.17679 201.61086 252.81342 c
h
201.61086 252.81342 m
S
/Cs3 SC
0 sc
0 i
224.65199 253.5 m
(&'\()[ 9.800000 8.120000 0.000000 ] xS
/Cs1 SC
0.92143101 0.92145264 0.92144102 sc
CM
234 11.5 m
234 68.199997 l
241.25 74.5 l
306.5 74.5 l
306.5 17.799999 l
299.25 11.5 l
h
234 11.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -151 296 cm
385 284.5 m
385 227.8 l
392.25 221.5 l
457.5 221.5 l
457.5 278.20001 l
450.25 284.5 l
385 284.5 l
385 227.8 m
450.25 227.8 l
457.5 221.5 l
450.25 227.8 m
450.25 284.5 l
S
/Cs3 SC
0 sc
0 i
406.677 260.64999 m
(\)"*)[ 8.904000 8.554000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0 0 0 sc
249.5 166 m
249.5 204.60001 l
S
0 i
CM
98.5 81.800003 m
102.1 91.400002 l
94.900002 91.400002 l
h
98.5 81.800003 m
f
0 J
0 j
1 0 0 -1 -151 296 cm
249.5 214.2 m
253.10001 204.60001 l
245.89999 204.60001 l
h
249.5 214.2 m
S
0.75 1 0.75 sc
CM
416.5 11.5 m
416.5 68.199997 l
423.75 74.5 l
489 74.5 l
489 17.799999 l
481.75 11.5 l
h
416.5 11.5 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -151 296 cm
567.5 284.5 m
567.5 227.8 l
574.75 221.5 l
640 221.5 l
640 278.20001 l
632.75 284.5 l
567.5 284.5 l
567.5 227.8 m
632.75 227.8 l
640 221.5 l
632.75 227.8 m
632.75 284.5 l
S
/Cs3 SC
0 sc
0 i
575.69501 260.64999 m
(+,-./0")[ 9.940000 6.216000 8.134000 7.476000 5.040000 3.500000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0 0 0 sc
459.5 236.5 m
555.09998 236.5 l
S
0 i
CM
413.70001 59.5 m
404.10001 63.099998 l
404.10001 55.900002 l
h
413.70001 59.5 m
f
0 J
0 j
1 0 0 -1 -151 296 cm
564.70001 236.5 m
555.09998 232.89999 l
555.09998 240.10001 l
h
564.70001 236.5 m
S
1 J
1 j
0.60000002 i
566 269 m
471.39999 269 l
S
0 i
CM
310.79999 27 m
320.39999 23.4 l
320.39999 30.6 l
h
310.79999 27 m
f
0 J
0 j
1 0 0 -1 -151 296 cm
461.79999 269 m
471.39999 272.60001 l
471.39999 265.39999 l
h
461.79999 269 m
S
/Cs3 SC
0 sc
/F1.1[ 12 0 0 -12 0 0]sf
156.43201 195.75 m
(1$2-0,034")[ 7.044000 6.864000 7.620000 6.972000 3.000000 5.328000 3.000000 6.000000 6.408000 0.000000 ] xS
490.992 287 m
(56*/7#7)[ 7.104000 6.972000 3.804000 4.176000 6.408000 7.644000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
221 213.5 m
221 174.89999 l
S
0 i
CM
70 130.7 m
66.400002 121.1 l
73.599998 121.1 l
h
70 130.7 m
f
0 J
0 j
1 0 0 -1 -151 296 cm
221 165.3 m
217.39999 174.89999 l
224.60001 174.89999 l
h
221 165.3 m
S
/Cs3 SC
0 sc
255.5 195.75 m
(\(68$/96:07)[ 3.120000 6.972000 3.540000 6.864000 4.104000 6.864000 6.972000 6.000000 3.000000 0.000000 ] xS
473.97601 227.5 m
(;$<*"=&/*0>:07%)[ 5.688000 6.792000 5.808000 3.804000 7.332000 2.784000 8.400000 4.176000 3.804000 3.000000 6.528000 6.000000 3.000000 6.408000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
276.5 235.5 m
372.10001 235.5 l
S
0 i
CM
230.7 60.5 m
221.10001 64.099998 l
221.10001 56.900002 l
h
230.7 60.5 m
f
0 J
0 j
1 0 0 -1 -151 296 cm
381.70001 235.5 m
372.10001 231.89999 l
372.10001 239.10001 l
h
381.70001 235.5 m
S
1 J
1 j
0.60000002 i
384 269 m
289.39999 269 l
S
0 i
CM
128.8 27 m
138.39999 23.4 l
138.39999 30.6 l
h
128.8 27 m
f
0 J
0 j
1 0 0 -1 -151 296 cm
279.79999 269 m
289.39999 272.60001 l
289.39999 265.39999 l
h
279.79999 269 m
S
/Cs3 SC
0 sc
303.30701 284.25 m
(1$2-0,034")[ 7.044000 6.864000 7.620000 6.972000 3.000000 5.328000 3.000000 6.000000 6.408000 0.000000 ] xS
305.38599 230.5 m
(1$,?",*7)[ 7.044000 6.864000 5.328000 7.620000 7.332000 5.328000 3.804000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
