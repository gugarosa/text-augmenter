%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 649.000000 294.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.2 (Build 18C54) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 649 294
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 649 294
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AvenirNext-Regular
%!FontType1-1.0: AvenirNext-Regular 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /AvenirNext-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /y put
dup 34 /C put
dup 35 /space put
dup 36 /h put
dup 37 /x put
dup 38 /ellipsis put
dup 39 /t put
dup 40 /hyphen put
dup 41 /one put
dup 42 /plus put
dup 43 /eacute put
dup 44 /l put
dup 45 /u put
dup 46 /a put
dup 47 /L put
dup 48 /S put
dup 49 /T put
dup 50 /M put
dup 51 /n put
dup 52 /X put
dup 53 /f put
dup 54 /i put
dup 55 /o put
dup 56 /asciitilde put
dup 57 /u03C3 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -394 1 index div -411 2 index div 1309 3 index div 1192 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 27 dict dup begin
/.notdef 0 def
/space 1 def
/plus 2 def
/hyphen 3 def
/one 4 def
/C 5 def
/L 6 def
/M 7 def
/S 8 def
/T 9 def
/X 10 def
/a 11 def
/f 12 def
/h 13 def
/i 14 def
/l 15 def
/n 16 def
/o 17 def
/t 18 def
/u 19 def
/x 20 def
/y 21 def
/asciitilde 22 def
/eacute 23 def
/ellipsis 24 def
/u03C3 25 def
/u0459 26 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-394 -411 1309 1192}def
/UniqueID 4446589 def
currentdict currentfile eexec


F5D3D236EB480FD5AB539A227E6617E0653352654673F5895FDE297AA7E8922995C15D14B0921FDAB003242055A4E267E0C44539CD912A1C4F2DE0C36EC7F038053CEF37E538066F3D4B063FCB66F142BA92E843E19808B09D14CBB0B24B2A716691682CEF787E9F69FD7B1CBB1D3C5C81B32696CD40B279ED712C6CCBD2D0980AFD5C9CED2E0DFA72FC9D0E09028D899A78E8D243B35A6C35B07AB39394A786B31D413BB1AB67ABE2C1D843B466C797DB8A01AA5BE18D980676EEA3EF25E7B09EF359875A50CECC68DAB703DB5EEC9769DA5FDDA7ADE51656EBEB0DF33689D5AC936A13826C2E72BF785EB2A774342E6354CC6803986491C91D0FA0517122A6026C1785B7D032AC1016EEEBF2BB799F32941E3B160F917538AAFCEA0211FBB6268E9F2A26A8409EDC3FDB5DE86C6769EF15C859B6BCB2ACFBD3993D45E3BE5C9892566CEBA422E90DAA5D66914567CBC10E1E0162D975FFB921DE7F1908F921B99266C853B47DE7BCABF3344698C73157FFF0B627DBA3BA0D8CB43B0BBDA56EBB72101CC93FD10AC5F71C3EF6DE4B92EB08500E63FA5808EAD4C8C4DF98E928BCEB7EB35C62A49CFF7A1EF9CC1923852BBDA75BB8FFB874007C2E9DF3CEF2E24BB5E6D194AA80597F85E941C706B36FC09A65447E3A9C5ABBDC05928D28054C7CE793B859CD364A0CE063D1F41AB38A2C934038CA3886C938019F68760BF29422B79D03F47B74DF267D1478DA27B180ABCCE837F269670E25B8CBBA7D83F27D12B7A33FA3D7D3740B02C9ED02238134932C82DAE7D38EC5FDD5867807BE82A3A60C2D69BA20F891C0BA4375D613F9CF6901BAD291420D3E4BB3B7BA10543B48D518C7F184BE1236B3E2CF0C4DBBC21E6CD465738EE83B985A3ED910C9D95D90DB9F6F612BF0F3AE87C833C3D49196DC8AAA9AF6F85EBB6F63717B48855A34FB6B30E25E312C4BEAC7DFFE94F2CA6E72CC313D5B26B54ECE164B907180112CF1CBECEDDE3C2A1A7C811C39D0C52B13EA803E22DCAA7D265E3A8F70EC3D92C00258B0C93F06CA4CF4319D7351AECE62722342FFA910C058FA4E739DE8AA8BEE484249C1437014879510A499BCCA1E6BC10F99C13A1D21554262F86E394F41EC53A287785EE3BBF8C245B4ABF8D300CCE58CDC8C6F99E9D974457991892BEB47D2CE4A300B608CBA81A0BCF45723D366A8F283285F477DC080D7296B6B03A6DBD0C905E90F22226E97505B8AC4BC3CECD9B7390398CC94F0581B7421392268BFD0C2CB27F5ABF5193041B13A7850BD7F3E7420E2EC013D1A0503A7EE3A022A118367E166F8A5DB2725C23906F2F47123D81FAC705E5ED654413C42427E8ECF5F9621B15C22AB719F8ACA6E70AF17C1E20ECA00312431358502FEE2417DEC3791B14076E203A70ED5A20BE748302EC37AD293B3027BF25CE2EF2D13444F5C82F1EE
083B188B6BBB281BF4D823A82D447BD1F0275ACF6DCC3193DE3F7128B8E5988897CB8A3A9ADCFCF261CD3B8EE3685F1330BC2C5B4942FE038D827CDF18815AE2782896A16CF6CC7725933EE5C0F758D683E4D9E304FAA887E055886D3B06F6CEB0AE143E85332EAA9E383309DE0B48E7B56505F4D384786B4A241F6C6577C965165E71411437700D0ABF9E89A6DD7AF6C631799612CE36720E9459B07CFA418E46E542520E2F149171A0103D05BD1C62DD50AABC31A8E5EA44D8A9A89735E3D41DAA72057A2A7BB666FB3803155804B6626196B030841948779A28BEB7A519B693F8CBE4D963C448A85BC196F4AD36D10F6829A37582F7C9C7A1298059A28A39970453B762E0B8402CF646331C3345EE2763C2E8B256DF520FFCF2A403C2F5EB20DFB0BE13DB260AC2C93174782AE90B9DDB48C84C7A462D497698F1F86F2093A262D1F91760CFE2581A4167C5B0624068BF41466B65B694018CFF403953D58D455EC1EBECB8633CCB045E20F4288CBF94E5CD016D34E8F6875C1D0CA1D599EB2463D7AC02EBD1B725A2C6FE3BB8D07FBB90B0512AED5D39F030AF31A78861BE29A15A5ED8C6ADFB85CC5A2BD44417EE366C096A8E0175E7B058780DCBA44073D5752FE123D72831B9EAB89E875AEC5E97FFB8F8A9B3D9697BAA5D3C016DA83510C36D10A4C4335DF127AFEE4CFA9D7DCA661EE0F732D2EBA303C33BEF5567C2E2B71B2EC79F68BB9B0D95C74FB0CAA949D50BA2F96FB1ED7F0250CC233676019A087E876DE59919BB66557B01F79D4627219ECBB70FC21BCDF772A4E63B332A8F3517AC86531978088ADD4AB52A894B64CB9F30BD50688AD716D0AC645F7655B9EBABC70AF73CED98DFA80D07FA6A89EC26C0615EF27708860F00D85EF677F88F2D59413352500BC886E52D0238E0C5B4B711766A65239209ED3807BAA97296EAF339E9E762A9602616CC460BB5A707321075D5B5FFDE3568C1EDCB66166C7B269D8BA0538BC4DFDFB6E4FDF17B31A8A8CA3CCFA71A5DF783834FEED4BBEA64A30802DFBEB7910FFC22327D67D1544CA7C731518050B56D0B7AAE29F867ED12F630946DDE81F4356B6ADC1506A12295F8A19DC82916F31B813C9CCDE76D3BF4A8553A31C1EAF2E27C204F7681761484849DC4DF3681379E94AEA2285AD36BBF029A7389381D9951F05E588A9B06F7645D87D5BB1B59A871F141ACC18D10A0A7FE4D95B9E0D9B7028F1C5775666C946D4A01DCB5A7B0C235BF416E8F04659522C6E861E8BC2C92A99D5A8DCF184978882CD0EF2C5AC8BF9F647C5977266BF97591DBC947593C98DAC263A9260F3830F41C32838987ED3B9BECE5B1FBB13BD4F4C6373D7FE4D3AC31E87222621479263F1FEA0900EA0D70E562ADA234F6D17318E5B4DD9D281C4007045CCE7DD0448AB303D9EF06B95D496110052EEAF21539A8
65A0BA7669F7A346AB03C0FFB987B9E636DCFA5701A38773C0E074749984BD63C93ACF698B7CB4EBFB4556252937684D89A47B34BB13F0334C020703D9824D8D28E1E29A0ADA9CDFF4460B6D2222F106615CB835F6870589D0821B872ADF30087C652B3016782F66FF25C0764ED0169298630A3EED4664845793E4A2131A7BBCEA714D73C16EF66A3441553DCF5EE60849EC9D41485C1696BD76CD85915068F9B703633851AB361C97ECCCE68A24604ACA9CA7337C51F076A32EE7D7DF4C88349614DBAC3F55ABCA47142470102CBC723B9BF997BA417FF51C0D78E4E1ACE8D494397139FE057E51855609C400570AFA5D1CDD797F2EE3495A9196F792349CB10744E53377E9AA7463F135700FBC74C53810510C8CAB94117B3205B32E59EBCD691C6D84CE8A3EA46EE02AF1257DA001E1867CD40DC2474668F09E5AD029BFB06897B127B0B8443035525ED9272AE352740B21BE80A7C358617182358BDFF42DD5844F24192B2A3D8E1F15ECD345A91A5ED9E68FDAD36864C5CDC7649C7340183D576615B7A103C68C2986FD3C6113E382323F9229
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AvenirNext-Regular cguidfix
/F1.1/AvenirNext-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 0.75 sc
q
0 0 649 294 rc
144.42764 276.05264 m
154.1908 266.28955 154.1908 250.46045 144.42764 240.69736 c
134.66455 230.9342 118.83545 230.9342 109.07235 240.69736 c
99.309196 250.46045 99.309196 266.28955 109.07235 276.05264 c
118.83545 285.8158 134.66455 285.8158 144.42764 276.05264 c
f
1 J
1 j
0.60000002 i
0.57380742 0.56553578 0 sc
1 0 0 -1 -349 421 cm
493.42764 144.94736 m
503.1908 154.71045 503.1908 170.53955 493.42764 180.30264 c
483.66455 190.0658 467.83545 190.0658 458.07236 180.30264 c
448.3092 170.53955 448.3092 154.71045 458.07236 144.94736 c
467.83545 135.1842 483.66455 135.1842 493.42764 144.94736 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 126.75 258.375 cm
/F1.1[ 16 0 0 -16 0 0]sf
-9 5 m
(!)s
/Cs1 SC
0.75 1 0.75 sc
CM
85.5 172.5 m
167.5 172.5 l
172.47057 172.5 176.5 168.47057 176.5 163.5 c
176.5 131.5 l
176.5 126.52943 172.47057 122.5 167.5 122.5 c
85.5 122.5 l
80.529434 122.5 76.5 126.52943 76.5 131.5 c
76.5 163.5 l
76.5 168.47057 80.529434 172.5 85.5 172.5 c
h
85.5 172.5 m
f
0.60000002 i
0.13725491 0.36862746 0 sc
1 0 0 -1 -349 421 cm
434.5 248.5 m
516.5 248.5 l
521.47058 248.5 525.5 252.52943 525.5 257.5 c
525.5 289.5 l
525.5 294.47055 521.47058 298.5 516.5 298.5 c
434.5 298.5 l
429.52945 298.5 425.5 294.47055 425.5 289.5 c
425.5 257.5 l
425.5 252.52943 429.52945 248.5 434.5 248.5 c
h
434.5 248.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 126.75 147.875 cm
-30 5 m
("#######$)[ 11.520000 4.000000 4.000000 4.000000 4.000000 4.000000 4.000000 4.000000 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
144.42764 52.98122 m
154.1908 43.218121 154.1908 27.389021 144.42764 17.625921 c
134.66455 7.8627715 118.83545 7.8627715 109.07235 17.625921 c
99.309196 27.389021 99.309196 43.218121 109.07235 52.98122 c
118.83545 62.744373 134.66455 62.744373 144.42764 52.98122 c
f
0.60000002 i
0.69411767 0 0.10980392 sc
1 0 0 -1 -349 421 cm
493.42764 368.01877 m
503.1908 377.78189 503.1908 393.61099 493.42764 403.37408 c
483.66455 413.13724 467.83545 413.13724 458.07236 403.37408 c
448.3092 393.61099 448.3092 377.78189 458.07236 368.01877 c
467.83545 358.25562 483.66455 358.25562 493.42764 368.01877 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 126.75 35.30357 cm
-9 5 m
(%)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -349 421 cm
475.75 360.69641 m
475.75 308.02499 l
S
0 i
CM
126.75 120.975 m
123.75 112.975 l
129.75 112.975 l
h
126.75 120.975 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
475.75 300.02499 m
472.75 308.02499 l
478.75 308.02499 l
h
475.75 300.02499 m
S
1 J
1 j
0.60000002 i
475.75 248.125 m
475.75 197.52501 l
S
0 i
CM
126.75 231.47499 m
123.75 223.47499 l
129.75 223.47499 l
h
126.75 231.47499 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
475.75 189.52501 m
472.75 197.52501 l
478.75 197.52501 l
h
475.75 189.52501 m
S
/Cs2 SC
0 sc
1 0 0 -1 22.5 152 cm
-8 5 m
(&)s
1 0 0 -1 626.75 152.21428 cm
-8 5 m
(&)s
1 0 0 -1 133.75 250.375 cm
/F1.1[ 10 0 0 -10 0 0]sf
-6.085 3 m
('\(\))[ 3.170000 3.200000 0.000000 ] xS
1 0 0 -1 154.45001 139.625 cm
-6.085 3 m
('\(\))[ 3.170000 3.200000 0.000000 ] xS
1 0 0 -1 133.75 27.875 cm
-6.085 3 m
('\(\))[ 3.170000 3.200000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -349 421 cm
931.5 272.66071 m
948.84998 272.66071 l
S
0 i
CM
607.84998 148.33928 m
599.84998 151.33928 l
599.84998 145.33928 l
h
607.84998 148.33928 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
956.84998 272.66071 m
948.84998 269.66071 l
948.84998 275.66071 l
h
956.84998 272.66071 m
S
/Cs2 SC
0 sc
1 0 0 -1 113.40002 139.625 cm
-6.085 3 m
('\(\))[ 3.170000 3.200000 0.000000 ] xS
/Cs1 SC
1 1 0.75 sc
CM
539.92767 276.55264 m
549.6908 266.78955 549.6908 250.96045 539.92767 241.19736 c
530.16455 231.4342 514.33545 231.4342 504.57236 241.19736 c
494.8092 250.96045 494.8092 266.78955 504.57236 276.55264 c
514.33545 286.3158 530.16455 286.3158 539.92767 276.55264 c
f
1 J
1 j
0.60000002 i
0.573807 0.56553602 0 sc
1 0 0 -1 -349 421 cm
888.92767 144.44736 m
898.6908 154.21045 898.6908 170.03955 888.92767 179.80264 c
879.16455 189.5658 863.33545 189.5658 853.57233 179.80264 c
843.8092 170.03955 843.8092 154.21045 853.57233 144.44736 c
863.33545 134.6842 879.16455 134.6842 888.92767 144.44736 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 522.25 258.875 cm
/F1.1[ 16 0 0 -16 0 0]sf
-9 5 m
(!)s
/Cs1 SC
0.75 1 0.75 sc
CM
481.5 173.5 m
563.5 173.5 l
568.47058 173.5 572.5 169.47057 572.5 164.5 c
572.5 132.5 l
572.5 127.52943 568.47058 123.5 563.5 123.5 c
481.5 123.5 l
476.52945 123.5 472.5 127.52943 472.5 132.5 c
472.5 164.5 l
472.5 169.47057 476.52945 173.5 481.5 173.5 c
h
481.5 173.5 m
f
0.60000002 i
0.137255 0.36862701 0 sc
1 0 0 -1 -349 421 cm
830.5 247.5 m
912.5 247.5 l
917.47058 247.5 921.5 251.52943 921.5 256.5 c
921.5 288.5 l
921.5 293.47055 917.47058 297.5 912.5 297.5 c
830.5 297.5 l
825.52942 297.5 821.5 293.47055 821.5 288.5 c
821.5 256.5 l
821.5 251.52943 825.52942 247.5 830.5 247.5 c
h
830.5 247.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 522.25 148.375 cm
-30 5 m
("#######$)[ 11.520000 4.000000 4.000000 4.000000 4.000000 4.000000 4.000000 4.000000 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
539.92767 53.48122 m
549.6908 43.718121 549.6908 27.889021 539.92767 18.125921 c
530.16455 8.362771 514.33545 8.362771 504.57236 18.125921 c
494.8092 27.889021 494.8092 43.718121 504.57236 53.48122 c
514.33545 63.244373 530.16455 63.244373 539.92767 53.48122 c
f
0.60000002 i
0.69411802 0 0.109804 sc
1 0 0 -1 -349 421 cm
888.92767 367.51877 m
898.6908 377.28189 898.6908 393.11099 888.92767 402.87408 c
879.16455 412.63724 863.33545 412.63724 853.57233 402.87408 c
843.8092 393.11099 843.8092 377.28189 853.57233 367.51877 c
863.33545 357.75562 879.16455 357.75562 888.92767 367.51877 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 522.25 35.80357 cm
-9 5 m
(%)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -349 421 cm
871.25 360.19641 m
871.25 307.52499 l
S
0 i
CM
522.25 121.475 m
519.25 113.475 l
525.25 113.475 l
h
522.25 121.475 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
871.25 299.52499 m
868.25 307.52499 l
874.25 307.52499 l
h
871.25 299.52499 m
S
1 J
1 j
0.60000002 i
871.25 247.625 m
871.25 197.02501 l
S
0 i
CM
522.25 231.97499 m
519.25 223.97499 l
525.25 223.97499 l
h
522.25 231.97499 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
871.25 189.02501 m
868.25 197.02501 l
874.25 197.02501 l
h
871.25 189.02501 m
S
/Cs2 SC
0 sc
1 0 0 -1 529.25 250.875 cm
/F1.1[ 10 0 0 -10 0 0]sf
-7.8150001 3 m
('*\))[ 3.170000 6.660000 0.000000 ] xS
1 0 0 -1 551.95001 140.125 cm
-7.8150001 3 m
('*\))[ 3.170000 6.660000 0.000000 ] xS
1 0 0 -1 529.25 28.375 cm
-7.8150001 3 m
('*\))[ 3.170000 6.660000 0.000000 ] xS
1 0 0 -1 510.90002 140.125 cm
-7.8150001 3 m
('*\))[ 3.170000 6.660000 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
231.5 200.5 m
421.5 200.5 l
426.47055 200.5 430.5 196.47057 430.5 191.5 c
430.5 103.5 l
430.5 98.529434 426.47055 94.5 421.5 94.5 c
231.5 94.5 l
226.52943 94.5 222.5 98.529434 222.5 103.5 c
222.5 191.5 l
222.5 196.47057 226.52943 200.5 231.5 200.5 c
h
231.5 200.5 m
f
1 J
1 j
0.60000002 i
0.137255 0.36862701 0 sc
1 0 0 -1 -349 421 cm
580.5 220.5 m
770.5 220.5 l
775.47058 220.5 779.5 224.52943 779.5 229.5 c
779.5 317.5 l
779.5 322.47055 775.47058 326.5 770.5 326.5 c
580.5 326.5 l
575.52942 326.5 571.5 322.47055 571.5 317.5 c
571.5 229.5 l
571.5 224.52943 575.52942 220.5 580.5 220.5 c
h
580.5 220.5 m
S
0 0 0 sc
534.375 273.16071 m
553.22498 273.16071 l
S
0 i
CM
212.22501 147.83928 m
204.22501 150.83928 l
204.22501 144.83928 l
h
212.22501 147.83928 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
561.22498 273.16071 m
553.22498 270.16071 l
553.22498 276.16071 l
h
561.22498 273.16071 m
S
1 J
1 j
0.60000002 i
391.375 273.16071 m
408.72501 273.16071 l
S
0 i
CM
67.724998 147.83928 m
59.724998 150.83928 l
59.724998 144.83928 l
h
67.724998 147.83928 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
416.72501 273.16071 m
408.72501 270.16071 l
408.72501 276.16071 l
h
416.72501 273.16071 m
S
/Cs2 SC
0 sc
1 0 0 -1 272.5 212.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-45.287998 5 m
("+,-,.#/012)[ 11.328000 9.152000 4.032000 9.296000 4.032000 8.544000 4.000000 8.160000 8.736000 9.120000 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
265.17764 53.10622 m
274.9408 43.343121 274.9408 27.514021 265.17764 17.750921 c
255.41455 7.9877715 239.58545 7.9877715 229.82236 17.750921 c
220.0592 27.514021 220.0592 43.343121 229.82236 53.10622 c
239.58545 62.869373 255.41455 62.869373 265.17764 53.10622 c
f
1 J
1 j
0.60000002 i
0.69411802 0 0.109804 sc
1 0 0 -1 -349 421 cm
614.17767 367.89377 m
623.9408 377.65689 623.9408 393.48599 614.17767 403.24908 c
604.41455 413.01224 588.58545 413.01224 578.82233 403.24908 c
569.0592 393.48599 569.0592 377.65689 578.82233 367.89377 c
588.58545 358.13062 604.41455 358.13062 614.17767 367.89377 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 247.5 35.42857 cm
-3.872 5 m
(%)s
1 0 0 -1 254.5 29 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.585 3 m
(')s
/Cs1 SC
1 1 0.75 sc
CM
436.17764 276.17764 m
445.9408 266.41455 445.9408 250.58545 436.17764 240.82236 c
426.41455 231.0592 410.58545 231.0592 400.82236 240.82236 c
391.0592 250.58545 391.0592 266.41455 400.82236 276.17764 c
410.58545 285.9408 426.41455 285.9408 436.17764 276.17764 c
f
0.60000002 i
0.573807 0.56553602 0 sc
1 0 0 -1 -349 421 cm
785.17767 144.82236 m
794.9408 154.58545 794.9408 170.41455 785.17767 180.17764 c
775.41455 189.9408 759.58545 189.9408 749.82233 180.17764 c
740.0592 170.41455 740.0592 154.58545 749.82233 144.82236 c
759.58545 135.0592 775.41455 135.0592 785.17767 144.82236 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 418.5 258.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-3.904 5 m
(!)s
1 0 0 -1 425.5 250.5 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.585 3 m
(')s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -349 421 cm
768.5 220 m
768.5 196.89999 l
S
0 i
CM
419.5 232.10001 m
416.5 224.10001 l
422.5 224.10001 l
h
419.5 232.10001 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
768.5 188.89999 m
765.5 196.89999 l
771.5 196.89999 l
h
768.5 188.89999 m
S
1 J
1 j
0.60000002 i
787.875 272.66071 m
804.72498 272.66071 l
S
0 i
CM
463.72501 148.33928 m
455.72501 151.33928 l
455.72501 145.33928 l
h
463.72501 148.33928 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
812.72498 272.66071 m
804.72498 269.66071 l
804.72498 275.66071 l
h
812.72498 272.66071 m
S
1 J
1 j
0.60000002 i
596.5 360.66071 m
596.5 336.0607 l
S
0 i
CM
247.5 92.939285 m
244.5 84.939285 l
250.5 84.939285 l
h
247.5 92.939285 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
596.5 328.0607 m
593.5 336.0607 l
599.5 336.0607 l
h
596.5 328.0607 m
S
1 J
1 j
0.60000002 i
534.125 236.26785 m
804.47498 236.26785 l
S
0 i
CM
463.47501 184.73215 m
455.47501 187.73215 l
455.47501 181.73215 l
h
463.47501 184.73215 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
812.47498 236.26785 m
804.47498 233.26785 l
804.47498 239.26785 l
h
812.47498 236.26785 m
S
/Cs2 SC
0 sc
1 0 0 -1 191.125 197.67857 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.7600002 5 m
(")s
1 0 0 -1 204.5625 190.67857 cm
/F1.1[ 10 0 0 -10 0 0]sf
-6.085 3 m
('\(\))[ 3.170000 3.200000 0.000000 ] xS
1 0 0 -1 441.5 197.67857 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.7600002 5 m
(")s
1 0 0 -1 449.9375 190.67857 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.585 3 m
(')s
1 0 0 -1 193.53125 99 cm
/F1.1[ 16 0 0 -16 0 0]sf
-4.664 5 m
($)s
1 0 0 -1 206.96875 92 cm
/F1.1[ 10 0 0 -10 0 0]sf
-6.085 3 m
('\(\))[ 3.170000 3.200000 0.000000 ] xS
1 0 0 -1 441.53125 99 cm
/F1.1[ 16 0 0 -16 0 0]sf
-4.664 5 m
($)s
1 0 0 -1 448.96875 92 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.585 3 m
(')s
1 0 0 -1 407 217.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-4.664 5 m
($)s
1 0 0 -1 414.4375 210.5 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.585 3 m
(')s
1 0 0 -1 235.0625 77.178574 cm
/F1.1[ 16 0 0 -16 0 0]sf
-3.872 5 m
(%)s
1 0 0 -1 242.5 70.178574 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.585 3 m
(')s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -349 421 cm
673.32422 310 m
673.27429 252.89999 l
S
0 i
CM
324.26727 176.10001 m
321.27429 168.09738 l
327.27429 168.10263 l
h
324.26727 176.10001 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
673.26727 244.89999 m
670.27429 252.90262 l
676.27429 252.89737 l
h
673.26727 244.89999 m
S
1 J
1 j
0.60000002 i
768.55859 310 m
768.5 217 l
S
602 309.5 m
602 254.03394 l
S
0 i
CM
253 174.96606 m
250 166.96606 l
256 166.96606 l
h
253 174.96606 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
602 246.03394 m
599 254.03394 l
605 254.03394 l
h
602 246.03394 m
S
1 J
1 j
0.60000002 i
740.44141 310 m
740.38281 236.5 l
S
0 i
1 0.75 1 sc
CM
239.5 136.5 m
266.5 136.5 l
266.5 118.5 l
239.5 118.5 l
h
239.48282 136.70535 m
f
0.60000002 i
0.19215687 0 0.40392157 sc
1 0 0 -1 -349 421 cm
588.5 284.5 m
615.5 284.5 l
615.5 302.5 l
588.5 302.5 l
h
588.48279 284.29465 m
S
0 i
1 0.75 1 sc
CM
310.5 136.5 m
337.5 136.5 l
337.5 118.5 l
310.5 118.5 l
h
310.47501 136.70535 m
f
0.60000002 i
0.192157 0 0.40392199 sc
1 0 0 -1 -349 421 cm
659.5 284.5 m
686.5 284.5 l
686.5 302.5 l
659.5 302.5 l
h
659.47498 284.29465 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 324.10001 127.95536 cm
/F1.1[ 11 0 0 -11 0 0]sf
-11.0825 3.5 m
('.3$)[ 3.487000 5.874000 6.391000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -349 421 cm
534.5 310 m
710.11328 310 l
710.11328 273.875 l
722.48279 273.875 l
S
0 i
CM
381.48282 147.125 m
373.48282 150.125 l
373.48282 144.125 l
h
381.48282 147.125 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
730.48279 273.875 m
722.48279 270.875 l
722.48279 276.875 l
h
730.48279 273.875 m
S
1 J
1 j
0.60000002 i
741 310 m
804.47498 310 l
S
0 i
CM
463.47501 111 m
455.47501 114 l
455.47501 108 l
h
463.47501 111 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
812.47498 310 m
804.47498 307 l
804.47498 313 l
h
812.47498 310 m
S
1 0.75 1 sc
CM
346.5 136.5 m
373.5 136.5 l
373.5 119.5 l
346.5 119.5 l
h
346.48828 137.1499 m
f
1 J
1 j
0.60000002 i
0.192157 0 0.40392199 sc
1 0 0 -1 -349 421 cm
695.5 284.5 m
722.5 284.5 l
722.5 301.5 l
695.5 301.5 l
h
695.48828 283.8501 m
S
0 0 0 sc
596.5 328 m
596.5 311 l
S
637 309.5 m
637 263.5 l
655.3656 263.5 l
S
0 i
CM
314.36563 157.5 m
306.36563 160.5 l
306.36563 154.5 l
h
314.36563 157.5 m
f
0 J
0 j
1 0 0 -1 -349 421 cm
663.3656 263.5 m
655.3656 260.5 l
655.3656 266.5 l
h
663.3656 263.5 m
S
1 0.75 1 sc
CM
274.5 135.5 m
301.5 135.5 l
301.5 118.5 l
274.5 118.5 l
h
274.375 136.22726 m
f
1 J
1 j
0.60000002 i
0.192157 0 0.40392199 sc
1 0 0 -1 -349 421 cm
623.5 285.5 m
650.5 285.5 l
650.5 302.5 l
623.5 302.5 l
h
623.375 284.77274 m
S
0 i
0.75 0.75 1 sc
CM
257.94974 189.18188 m
260.68341 186.44821 260.68341 182.01607 257.94974 179.28239 c
255.21608 176.54872 250.78392 176.54872 248.05026 179.28239 c
245.31657 182.01607 245.31657 186.44821 248.05026 189.18188 c
250.78392 191.91557 255.21608 191.91557 257.94974 189.18188 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -349 421 cm
606.94977 231.81812 m
609.68341 234.55179 609.68341 238.98393 606.94977 241.71761 c
604.21606 244.45128 599.78394 244.45128 597.05023 241.71761 c
594.31659 238.98393 594.31659 234.55179 597.05023 231.81812 c
599.78394 229.08443 604.21606 229.08443 606.94977 231.81812 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 253 184.23215 cm
/F1.1[ 9 0 0 -9 0 0]sf
-2.9205 3 m
(4)s
/Cs1 SC
0.75 0.75 1 sc
CM
329.23099 189.18188 m
331.96466 186.44821 331.96466 182.01607 329.23099 179.28239 c
326.49731 176.54872 322.06519 176.54872 319.33151 179.28239 c
316.59784 182.01607 316.59784 186.44821 319.33151 189.18188 c
322.06519 191.91557 326.49731 191.91557 329.23099 189.18188 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -349 421 cm
678.23102 231.81812 m
680.96466 234.55179 680.96466 238.98393 678.23102 241.71761 c
675.49731 244.45128 671.06519 244.45128 668.33148 241.71761 c
665.59784 238.98393 665.59784 234.55179 668.33148 231.81812 c
671.06519 229.08443 675.49731 229.08443 678.23102 231.81812 c
S
0 i
0.75 0.75 1 sc
CM
329.04974 162.44974 m
331.78342 159.71608 331.78342 155.28392 329.04974 152.55026 c
326.31607 149.81657 321.88394 149.81657 319.15027 152.55026 c
316.41656 155.28392 316.41656 159.71608 319.15027 162.44974 c
321.88394 165.18343 326.31607 165.18343 329.04974 162.44974 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -349 421 cm
678.04974 258.55026 m
680.78345 261.28394 680.78345 265.71606 678.04974 268.44974 c
675.3161 271.18341 670.88391 271.18341 668.15027 268.44974 c
665.41656 265.71606 665.41656 261.28394 668.15027 258.55026 c
670.88391 255.81657 675.3161 255.81657 678.04974 258.55026 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 324.10001 157.5 cm
-2.9205 3 m
(4)s
/Cs1 SC
0.75 0.75 1 sc
CM
395.83255 151.94974 m
398.56622 149.21608 398.56622 144.78392 395.83255 142.05026 c
393.09888 139.31657 388.66675 139.31657 385.93307 142.05026 c
383.1994 144.78392 383.1994 149.21608 385.93307 151.94974 c
388.66675 154.68343 393.09888 154.68343 395.83255 151.94974 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -349 421 cm
744.83258 269.05026 m
747.56622 271.78394 747.56622 276.21606 744.83258 278.94974 c
742.09888 281.68341 737.66675 281.68341 734.93304 278.94974 c
732.1994 276.21606 732.1994 271.78394 734.93304 269.05026 c
737.66675 266.31659 742.09888 266.31659 744.83258 269.05026 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 390.88281 147 cm
-2.9205 3 m
(4)s
/Cs1 SC
0.75 0.75 1 sc
CM
402.06116 173.81581 m
408.23483 171.08214 408.23483 166.64999 402.06116 163.91634 c
395.88754 161.18265 385.87808 161.18265 379.70447 163.91634 c
373.53079 166.64999 373.53079 171.08214 379.70447 173.81581 c
385.87808 176.5495 395.88754 176.5495 402.06116 173.81581 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -349 421 cm
751.06116 247.18419 m
757.2348 249.91786 757.2348 254.35001 751.06116 257.08368 c
744.88751 259.81735 734.87811 259.81735 728.70447 257.08368 c
722.53082 254.35001 722.53082 249.91786 728.70447 247.18419 c
734.87811 244.4505 744.88751 244.4505 751.06116 247.18419 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 390.88281 168.86607 cm
/F1.1[ 10 0 0 -10 0 0]sf
-10.075 3 m
('.3$)[ 3.170000 5.340000 5.810000 0.000000 ] xS
1 0 0 -1 324.28125 184.83928 cm
/F1.1[ 14 0 0 -14 0 0]sf
-4.6620002 4.5 m
(*)s
1 0 0 -1 242.59375 157 cm
/F1.1[ 16 0 0 -16 0 0]sf
-2.3599999 5 m
(5)s
1 0 0 -1 247.03125 151 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.585 3 m
(')s
1 0 0 -1 276.72812 157.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-2 5 m
(6)s
1 0 0 -1 281.16562 151.5 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.585 3 m
(')s
1 0 0 -1 350.68085 159 cm
/F1.1[ 16 0 0 -16 0 0]sf
-4.888 5 m
(7)s
1 0 0 -1 357.11835 151 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.585 3 m
(')s
1 0 0 -1 313.35001 144.96428 cm
/F1.1[ 12 0 0 -12 0 0]sf
-4.3200002 4 m
(")s
1 0 0 -1 319.78751 141.96428 cm
/F1.1[ 8 0 0 -8 0 0]sf
-1.268 2.5 m
(')s
1 0 0 -1 313.85001 152.46428 cm
-2.664 2.5 m
(8)s
/Cs1 SC
0 0 0 sc
1 0 0 -1 288 128.81641 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0799999 5 m
(9)s
1 0 0 -1 253 128.20535 cm
-5.0799999 5 m
(9)s
1 0 0 -1 361.11328 129.49547 cm
-5.0799999 5 m
(9)s
ep
end
%%Trailer
%%EOF
