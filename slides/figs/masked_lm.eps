%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 522.000000 242.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.6 (Build 19G73) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 522 242
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 522 242
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AvenirNext-Regular
%!FontType1-1.0: AvenirNext-Regular 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /AvenirNext-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /E put
dup 34 /n put
dup 35 /t put
dup 36 /r put
dup 37 /a put
dup 38 /d put
dup 39 /colon put
dup 40 /u put
dup 41 /e put
dup 42 /h put
dup 43 /o put
dup 44 /m put
dup 45 /M put
dup 46 /aacute put
dup 47 /s put
dup 48 /c put
dup 49 /atilde put
dup 50 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -394 1 index div -411 2 index div 1309 3 index div 1192 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000001A6670676D00000000000000B800000173676C7966000000000000022C00001E44686561640000000000002070000000366868656100000000000020A800000024686D747800000000000020CC000000506C6F6361000000000000211C0000002A6D617870000000000000214800000020707265700000000000002168000000720014003600400090004800000012FF10000001D4000C02C400120000B800002C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D00000400000000020002CE000300230027002B0049B8002C2FB8001C2FB8002C10B80026D0B800262FB900160004F4B8001C10B900250004F4B8002DDC00BB00030002002400042BBB00250001001900042BBB00040001000100042B3031373533152F0134373E01373E0335342623220607273E0133321615140607060706151711211101112111DE3835020D07161110140A042D1F1F2D0632074A3636461926250606BFFE6401CEFE00754343751138190D1D110F1713110924312C33084841473C20352321131434B80269FD97029CFD3202CE00020060FFFA00CC01DA000B001700B3BB00000004000600042B411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8000010B8000CD0B8000610B80012D000B800004558B800092F1BB9000900093E59B800004558B8000F2F1BB9000F00053E59B8000910B900030003F44105000800030018000300025DB8000F10B900150003F44105000700150017001500025D3031131406232226353436333216111406232226353436333216CC1E18181E1E18181E1E18181E1E18181E01A415212115152121FE77152121151521210000








00>] def
/CharStrings 20 dict dup begin
/.notdef 0 def
/colon 1 def
/E 2 def
/M 3 def
/a 4 def
/c 5 def
/d 6 def
/e 7 def
/g 8 def
/h 9 def
/m 10 def
/n 11 def
/o 12 def
/r 13 def
/s 14 def
/t 15 def
/u 16 def
/aacute 17 def
/atilde 18 def
/u0459 19 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-394 -411 1309 1192} readonly def
/UniqueID 4446589 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E2150EE8A95E8E056CF63C096EC954E9AB4D39A5004249114C46F9328B665673C1A683FF5DBB4B3EC78419695B8F117CE665FE3F923CF612D806437E4DACA0431C832BB8B85B261E4A24236F5F3B86058A246FB6541F9C6AFB1E543A7335AE24D80162C20002564AF88F1E2DF91FFAB8E2911E1E32EA46BB8F127022581CA5B78F8B26A50073441D776CD48C0331E705AE35A0BB120BA71E59E7B82C01F79FE7F613253BFDB749B2E06D83132D08DBCB8EB13B3E2F38F6B9D36A84DC059B9494E8F46444FE9C03856D183E26A57384F110B50CA274684B7CFE8612AA040483B58B9FFD7FA1EE5BAD648384BA5A657E040BC4F6A233E042C6DB7E3BA88A54FD1E337CC5F18867695A71ED3C451CCCD5AC13D0D8CC948D55F6A5826EE36BA35605C3F9582D3CA7C069EE4BA0625E53AFFC1279249D90CF7449FB2ECDED58A80B83AF957FE0DE35551C3EA40F003F550EAF7101F0AD509B22BEE95EB5DCDCFC41A8849FADACCABBC4BFAB4EAA93C670AFD9C83A018221B8FBF851122C707ADD99EA5F60AD32A690AED13061D218DD3A342EB6D3B01FCBF7D5B812B5EC9A7F0334EA5AD5F1F5EDB3DBACA0390600801BC5D0D565466B44F7DEC5CB58DCDE59F0BE3F966193D508937C9E5D9DB8B5F8C84BFB5F4F3E57CD8973BAF9FE7AB261182D51CF219A313304CAE6126E40D6072FEB694F8AAF0F5E437791E05803769D9AF3353AFF1617E45F49C789F8E97A4CF7C8360575606F1CF7A07C75068E820E3CBEB4C8AE21
C764B979243FFD457C31CA0B9602B2C88C7A5CE4839D2491560EF5028BB68D8D845D5825AF7CB49B64AD9904B3EC15EF6E7575E4730080269BA370F17C3F2613A984E3202E493B1F25A432BD18C9CAB5A64CA10F3721FB4610D31D9F755641874750707414B423C6947D7BA87BE4CCE3BA44B387455EAD08AC98DD1D9AB3A18029BC7FE76AEDA801A656654C7E9645FC84FC090CF95E9138685D25D0B74EE27B85ED7D50F45B23E9905799827653330BFAB1EC1454773F32484A75BBB0A340B71CB3622DE9D4130A5E78F5D1A4F092AE74EF4A83A5A8C6F956391CB07F84142AABD031379863AB005F73C69DC150581ED158BA04C8BDFFC799ADBD04770F1225ED92B2BC7A26F362683E32EEDDBE25B3783BC0A0C81DA9DBD39ADB952762C59CC19C6BFA4995C750D386B93C27B2AEBD6567EC397EEF800938D7858DC57C88E97538374E8A09D11A8620E31189EA80EE8779375A0D004B8EDA5F367FDD621EE5CFD1F785E46296813A735C7C78AAAD41AF1F113ACB00C5303B589230E519553E9A4198EDF8E7752B8F97DD3B5DFE86A7B466BCD1B564CA7AE40C28F83C41CFF246FA88001D585DA4DE34417B05BAA35A2D9B1E8A16F78F1FAB5163656339796A203D61A4C8BCEFFDCF5258D0EC1ADDBA4F9D04CF3AF67D7490D7CCCA9AD2E5DFBD36D044331F934FD893843E5124FC42FD96F4C043F9099D7C38446BB498C2E9DE37226525253005F83984C0A65BE648C931224A9286239868573F5F79CFD19599E8833241CE796DBF273BF57F0A385E1D6EFD7081B6F7E40D60D0A4A8875AA2E71E35F1685F5F099CB0F78D62A21EFAC3F52F29C7810C2C474737179B0A97A0F7FF01F09B307D107C51DA1F24E1D515829708975831369684DD5E799478DD512107DF51699D552C7C15D8BE6295B80E7E7AF16BC6D6909E7413E7D31DEB38C5B118C9BB58ED0DD929B0E07A06F2F08F5D6E9FE5000F1C912D0374ACA9E06DEBB7DA8FB5A9DF8F3FD8C5A026DD0A854DAD130D8C69EA8CC248B5D358BCA6FE0A39FDD95D7D4C73F92A905C0882A2A11CEF18A18821BBDC7BC075BFD3D0E059D170A1BD826D8CAF4C64DCD942B8383CEA73AD40674F717BC2403AD4EF2CAFE63D752794C5869C74D2DAEA131B5DD10650D22F00C911861F29510E91D8FED1D3FD52692761CEA1232BDC4F8BFA957279CB78FF6D5734CB7B98E51638770FCE966E1B622FB117574B4110717046C760BDB086816534A0B69B589DBC974917744C666C68F2944E4CEE8A31E1A74D72EA8472644D8B0CD0A9180B93D16C424AA717C53C4CAF42D85B4FA34BDAB4A274ADEC06206972B676115BD4BC30302C486F23E704E2E7B60C5CB39FA695DC98D41B424626099FD3CB72F027CB3FD9286A680D694BD9ECDF98735B7C5761DA0B5327A29CF4069FF1004B9803BF3F4D3B676C31C5
2DCF74CCB60054BDA8F26448A6B4D4FD24AD32CB0CA85128DD04483C4DD203304450551E4FE93D2DE4D8494A665F09D78E827ACE523A75D1C010C98C942AD7AF66270C41666A89DA40ED73363D8FB4B71EB01996A363A5B84BAF85B136DCF501F4D5103CAED8B5C3E4FC2800EA1EFAB3CED7F4C2FE04CA0FB159D16C139D224492029EFD737B31B0B1C8EC8B56411EE56221E77AC640DB4A195485ECD2B312672353B90ED5DB74264AEDE2349A43252C6E4A37792630E2B3E2E2C624F4DEA3B6529C3EE13677DFA6B5E38E2CBB3D307B4E008A6034EA6FA71FCAEE3D9AD7457ACE614A53C814EE34A8B8E153241E3F8FE9528B54584394FE2D0075A36F8A663C86AC9EE63842034CFFF21DF4637003E341E9ED300E48498DEC1D2798A4CFC2D23F33D330ED55778CA90A77715FDE89C32017FFE8A1B01A3FE086E6C427837FD4B26415D7FC2A36D885063292F18F7DC185D80EB3DE4CD4E7EB6D92B43C74BFE5043964E28F9F61A948B649531D3DF9EA5FE32F984891D0694B95D7CC055160AABF63F7DFEAE9403F45C05D3DAB3C7779B1E33A1C2751F2A945311E5937492A01EC2450C7FDCDF32B5BCD29A192C7ABCA265CCCAB5B846AA2514EFF5C8DEDC245EB6A912C3EE8DE3A422BEA37FAE4A69590E89AF6234DBA887394542FCA6686D50CF1527AF07BED2036DB509EFAF01F281E05EEB3482E7A0CC2D72A7EFAE0B32AEC61E4D8DC9623E28DCDA29E8CFE7F6F29B31EED44DF73CA8F4A7BF5E26554C80D556AFB27B5697A5D01D83C3B90CF33821274832DCAA9620AC3B57894E5CFE65120B2E1F62045EDF8C31579813E1E41818A2B5BC2531FD7E161DEE38518F87CA765F9A4E31E1648CEE3F5DAB0655FAF53B1ED9DACE33BCF84D490E35CCE5A848DC212FC36FA91F0A5CF3F3405838F24D5C00922003D61FE8FCD4E38572538F30909ED815A21CFB6727C09353D62CBE9D85253C8FB97F91F79332E235800F65B158BB73746D081F4C0C90029BA60F0F0EC19742987BB438776F6769F021D48241413B0C5493E7D9BD8574216A53A77B241824A6A9810CEF8B7D2F6C1FBD17930020176870953B547EC57EE45E76313AD0EAD0B9066278CA7EA6A13C83AE256D371911E6A6E6B85174058ABC97A3A0A9185A2E018F45E094A2F0C347B1F7448123DB6DD09F841D1166CEE99A8DB0E29B73E28F8535E59E34084CB62E4FC414C8326CBC97CE46A2CC23DD45F4985DBEF5756432513DC883A979E5A78C2E7891E36D5262202FE2A7FF485E0B2AA5D5A55EF66B5E4D3D0584C198C8E97E04B364CEF28C4D689CB5CAD4093A3BF82FD379AC99D3FFA0A8628654F6E203D46084A740467D926DB022A2F0FF08FB7C9A37DFCC0E8E7F7D208C763DC0293045FD8A2119A3A5DD01723AC03393BA62F8E651C8F2288B969E2C38A95E1B9C570122914D4B1

F5F233A6729355BCB1310459E49726D86B38E7A0881FBF1A8EAEA0109164133FD435E86696E0BE43E9D95F47A93EAAB5C950BC6CE20E2F2DCC8098C1479CBD014D1CCD2A68A130D9800ADA7151AA24D410E427FC304DBAFE3E3C1AD8862A013E44EBD03BD654CB3C4E08F30629D7C8A52B1D52A2C72C1FF23024B33CA1D525D8BF9EC64EAAD7439ACA19C3DFE9CDB45C609A4D95800319FC7C622E7310E72F92A3D26A607A191F08E58DB0E43AA8FD330B6BCD5B0CF47E10BF4B1CCE0EF560BE6C291117F11E52A6C3DF9805787D22A63A33CCEB0F1A167CC6C2C604ED4072C6994ED59CDBC20773115B87F92BADB37EB774B77CC9FAF95844DE64EE35CED662E06C2868DA31FCBB81FAC858D8E7F7F3F50A94F97D24E0AA1996A019927F75BC91868A2FD48C6D1D18FB468A41BA69179F3DE522227DB2B07DC02DB54E635B336DF6BF403151410C01132719E113CEF781AB94672CEB542A70BE6CEEFC441852932D077235392CBC405FF3B31812B55C274466ED599033DA7D04BC6150EBC0F25049BAD3208083AC67363E0478CA3FF4D9528558B71FB96FDB59A5AC62F27E963C9F7E69D1F31F76A379CA99E4C4ECC9599811798A895B93CA351FFCAE049C05034632AF732380D7D47195E0AB443A2759B199514EA9A8C0993A100E378F7E7BA48916A5B9182C5489146FAF3C10258BB1F1DC5E5B1E7A359741C7018BC851E422311CA56203ABE0FD3176D7118E3EB0ADCE97E621ACAEA11B5CFFA2D3081111FF0B0D6AF8222E45D3EE7FA6325646DA2DF355DB308B8A3D088EB4CE09005D8FC4FE708ABEE1D65AC96562013A3054195F0B1657E9E49B1115EA28999C78B1740793AC4410B360548A6EAC5574E692E0A34D873A33EB8DD472695F9A8A1484F96196609CE2990632F534CB8E4124297A33E621CD7D7B950981FB7FE4D8C11202C4B34329C630416B1F513C432BC2395BA3C8587A5367F9C0BE9D6FD535175AEEEDE903B6FB130DAEC0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AvenirNext-Regular cguidfix
/F1.1/AvenirNext-Regular renmfont
%RBIBeginFontSubset: AvenirNext-Italic
%!FontType1-1.0: AvenirNext-Italic 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /AvenirNext-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /t put
dup 34 /o put
dup 35 /k put
dup 36 /e put
dup 37 /n put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -381 1 index div -409 2 index div 1365 3 index div 1194 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000001A6670676D00000000000000B800000173676C7966000000000000022C000008EC686561640000000000000B1800000036686865610000000000000B5000000024686D74780000000000000B740000001C6C6F63610000000000000B90000000106D6178700000000000000BA000000020707265700000000000000BC0000000720014003800900048006000000012FF10000001D4000C02C400120000B800002C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D00000400000000020002CE000300230027002B0049B8002C2FB8001C2FB8002C10B80026D0B800262FB900160003F4B8001C10B900250003F4B8002DDC00BB00030001002400042BBB00250001001900042BBB00040001000100042B3031373533152F0134373E01373E0335342623220607273E0133321615140607060706151711211101112111DE3835020D07161110140A042D1F1F2D0632074A3636461926250606BFFE6401CEFE00754343751138190D1D110F1713110924312C33084841473C20352321131434B80269FD97029CFD3202CE00020022FFF401F401E0001F002B019BB8002C2FB800232FB8002C10B80014D0B800142FB900030003F4411B0006000300160003002600030036000300460003005600030066000300760003008600030096000300A6000300B6000300C60003000D5D410500D5000300E5000300025DB80000D0B800002F410500DA002300EA002300025D411B0009002300190023002900230039002300490023005900230069002300790023008900230099002300A9002300B9002300C90023000D5DB8002310B9001C0003F4B8002310B80020D0B800202FB8001C10B8002DDC00B800004558B800192F1BB9001900093E59B800004558B8000F2F1BB9000F00053E59BB


630051003F002D0018000000082BBF00020027002000190012000E000000082B00BA0005000400072BB8000020457D6918440000
00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/e 1 def
/k 2 def
/n 3 def
/o 4 def
/t 5 def
/u0459 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-381 -409 1365 1194} readonly def
/UniqueID 4505616 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2841D4E2A5F3E00796201973F6D284AC32836A38BF7BF5AD47553F106A3BCF65F7C73B48871FA45E0143B0B2A15F91538CA97CA3844554AD5CCCFFD6C882AA318E615C9969873C05379D0C926375EE2807FCDCE2A72DC6528A774BBF35A996324AED09006D6804665F3D635C3A9664C9848A2470512B3C0E6A9BF26CDC0189D1085FFA561697F5D0048A7E71B065FDCD67CC1F77BA1177AEF418857751EEB7E583F0CE1E164803ACD0D588E7418B081137F9A50DE5E8401C47EE0268DFDC2C34175845B8E41168F4BB2548E0FA733AA9C215359FA54F7BBF858AE5CF3AD89A00DC1BAE38CCBABCE91D05A2C9D3DFD4A412EB9882A90B8169CFFC1734098CBC647CA0C24460DDB9D931DC54B5C23F04396ED856E490B1D9C74853CE38B635E287FAFC9BF0401F601432A6D2D5D7F24801B23CDBB01BE0F43912DE74BCC2F0889E502B6B3CF8EB461CAEEB0550BCE0674F08037C41573CE1E4B40EDBAD1CB53B653BE7223E812278BD11633144193E7E508DFB1BFCCD5AAD5A83CC0638D9AF30FD58E1613BACD8F09C63F6CEE2172A6E4ED6BFEB45766B1D01F643D7CB7E11BDEB0F46FEB17940AA704FB21A794DF47DB15EADA215D1BC5F27AA73031BED413982624930F62BACEF406754BF7A18533C6999C8515D82F885E16888AF276C6BBAC07831E290945581D1DC9D52481AB42A1CBBDCD4CBA2033C187FE4266DC521ECE524F140B6F1B6C5C88D1C926001FF2D58839682807FBB4CD0901E5768E2182BD448AC3ACCE

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AvenirNext-Italic cguidfix
/F2.1/AvenirNext-Italic renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /ellipsis put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<

206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020033000101CC02C8000300070061B800142BB800082FB800002FB8000810B80006D0B800062FB900020003F4B8000010B900040003F400B800014558B800042F1BB90004000A3E59B800014558B800052F1BB9000500043E59B8000410B900000002F4B8000510B900020002F4303101211121131121110199FECD013333FE67029AFD950299FD3902C70003006F00000378006F00030007000B0081BA000B000800032BB8000B10B80004DC410300BF000400015D4103002F000400015D41030070000400015DB80007DCB80000DC4103002F000000015D410300BF000000015D41030070000000015DB80003DCB8000DDC00BA0000000100032BB8000010B80004D0B8000110B80005D0B8000010B80008D0B8000110B80009D0303125153335211533352115333503096FFE446FFE446F6F6F6F6F6F6F6F0000010036000002BB031D003000B8B800142BBB00110003001F00182BBB000C0003000D00182BBB00050003000600182BBB00000003000100182BB8001110B80019DCB8000D10B80023D0B8000C10B80025D0B8000610B8002AD0B8000510B8002CD000B800242FB8002B2FB800014558B800172F1BB9001700043E59BB00280002000900182BB8000910B8000BD0B8000B2FB8001710B900150002F4B80019D0B800192FB8001AD0B8001A2FB8002810B80026D0B800262FB8002810B8002AD0B8002A2F30310123342627112311262322071123110E0115141E013B0115213533352E0235343E0137353315363332173533151E0202BB5F3D48371217161137493C3B704DE3FDFA6D34482437674537180F0F1A37466737016168891CFEF301180403FEE7010C1C88684D7D494E4B04185C733A46886415665B02025B6615638C000000000100000001000037DECA9F5F0F3CF5011103E800000000B643600000000000D8B9A5E0FC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000000301F4003303E8006F02E5003600000046009E01400001000000030096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E00
37002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/ellipsis 1 def
/uni20BE 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4445087 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28024022816FF807CAF9CEF58EA120E680185C875EBD525A303749E6A753A535141AB823E5C1E11F750B6325899C8AB001F5FCC67CF05CB730EF760C9CFFADA99508794C30F976CDEF26FFF2097971CD6E3A33DD8049B09A4C2FBC15C4FE1086177C1C2806F300217EFED01196623AB23B5E7D5F5400C8CE4D97809959018032EB96AF0B2F373F3A06C0218367D2117044E1306ED3AA3E5AB9F9EFF587B0A1212D95BC49394BDFAC6FA9E294EBE1059CA6BBFAEA2A26589972005C7DEFFFD34114594B396A0EC2EBEFA41E472DCF23E704D202C63DD77BB342E5A9DD4621742EF7A071BC3A8FB4C894522C414C0BEA52416D2FFACDF5BCBC0F2E8372AFC7367DE37EB06863177704C01C18E331BA29832D10E5E3F9FD5894C453FE05BB6A2BD00D92259595848A26F5B1BDBCB74329DD2B8EC5796A805760608CA72CDD69B68C5C8F940EACFE9969ADF1E69A1907B86CAF8D75D552B66A665697366ED6140FB8E8E3E7070A3F2D784B3ABDAF3F01D03AACAD4C484DA910FEF4FB2FE3F7B6724E9618FBAC58E7589D8E64BC6746F4C56D86D96E7EA274EFE8DA556FDD8318E0D3B03084E6406F3ED065EF3BC486F3BF12C3F6608890DAB0A25693AE4D7E037BEA522F5DAB7E7D97271FD8175F9A1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F3.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 sc
q
0 0 522 242 rc
1 0 0 -1 -163 535 cm
/F1.1[ 16 0 0 -16 0 0]sf
168.6265 341.25 m
(!"#$%&%')[ 9.472000 9.296000 5.072000 5.568000 8.544000 10.192000 8.544000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
87.5 216 m
156.78 216 l
156.78 181.5 l
87.5 181.5 l
h
87.5 216 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 535 cm
250.5 319 m
319.78 319 l
319.78 353.5 l
250.5 353.5 l
h
250.5 319 m
S
/Cs1 SC
0 sc
0 i
275.75601 341.25 m
(!\()[ 9.472000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
178.5 216 m
247.78 216 l
247.78 181.5 l
178.5 181.5 l
h
178.5 216 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 535 cm
341.5 319 m
410.78 319 l
410.78 353.5 l
341.5 353.5 l
h
341.5 319 m
S
/Cs1 SC
0 sc
0 i
354.828 341.25 m
(#\)"*+)[ 5.072000 9.152000 9.296000 9.328000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
269.5 216 m
338.78 216 l
338.78 181.5 l
269.5 181.5 l
h
269.5 216 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 535 cm
432.5 319 m
501.78 319 l
501.78 353.5 l
432.5 353.5 l
h
432.5 319 m
S
/Cs1 SC
0 sc
0 i
455.42801 341.25 m
(\(,)[ 9.296000 0.000000 ] xS
/Cs2 SC
1 0.25 0.25 sc
CM
360.5 216 m
429.78 216 l
429.78 181.5 l
360.5 181.5 l
h
360.5 216 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 535 cm
523.5 319 m
592.78003 319 l
592.78003 353.5 l
523.5 353.5 l
h
523.5 319 m
S
0 i
1 1 1 sc
CM
451.5 216 m
520.78003 216 l
520.78003 181.5 l
451.5 181.5 l
h
451.5 216 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 535 cm
614.5 319 m
683.78003 319 l
683.78003 353.5 l
614.5 353.5 l
h
614.5 319 m
S
/Cs1 SC
0 sc
0 i
644.56403 341.25 m
(\))s
/F1.1[ 14 0 0 -14 0 0]sf
529.67999 312.5 m
(-./0%$%)[ 12.404000 7.476000 6.216000 7.000000 7.476000 4.872000 0.000000 ] xS
/Cs2 SC
0.40784314 0.73725492 0.21176471 sc
CM
360.5 161.5 m
429.78 161.5 l
429.78 127 l
360.5 127 l
h
360.5 161.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 535 cm
523.5 373.5 m
592.78003 373.5 l
592.78003 408 l
523.5 408 l
h
523.5 373.5 m
S
1 1 1 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
544.97998 395.75 m
(01+)[ 8.000000 8.544000 0.000000 ] xS
0.40784314 0.73725492 0.21176471 sc
CM
360.5 107 m
429.78 107 l
429.78 72.5 l
360.5 72.5 l
h
360.5 107 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 535 cm
523.5 428 m
592.78003 428 l
592.78003 462.5 l
523.5 462.5 l
h
523.5 428 m
S
1 1 1 sc
0 i
541.46802 450.25 m
(2%#+)[ 10.112000 8.384000 5.072000 0.000000 ] xS
0.40784314 0.73725492 0.21176471 sc
CM
360.5 35.052002 m
429.78 35.052002 l
429.78 0.55200195 l
360.5 0.55200195 l
h
360.5 35.052002 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -163 535 cm
523.5 499.948 m
592.78003 499.948 l
592.78003 534.448 l
523.5 534.448 l
h
523.5 499.948 m
S
1 1 1 sc
0 i
/F2.1[ 16 0 0 -16 0 0]sf
538.02002 522.198 m
(!"#$%)[ 4.912000 9.536000 7.504000 9.056000 0.000000 ] xS
/Cs1 SC
0 sc
0 -1 -1 0 881.724 617.276 cm
/F3.1[ 16 0 0 -16 0 0]sf
555.5 487 m
(!)s
ep
end
%%Trailer
%%EOF
